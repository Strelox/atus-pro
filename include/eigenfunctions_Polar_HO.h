#ifndef __eigenfunctions_Polar_HO_h__
#define __eigenfunctions_Polar_HO_h__

double PHO_0_0( const double a, const double x )
{
double retval = 0.141421356237310e1 * a * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x);
return retval;
}

double PHO_1_0( const double a, const double x )
{
double retval = 0.7071067810e0 * a * sqrt(0.2e1) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (-a * a * x * x + 0.2e1);
return retval;
}

double PHO_2_0( const double a, const double x )
{
double retval = 0.4714045207e0 * a * sqrt(0.3e1) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.3e1 - 0.3e1 * a * a * x * x + pow(a, 0.4e1) * pow(x, 0.4e1) / 0.2e1);
return retval;
}

double PHO_3_0( const double a, const double x )
{
double retval = 0.7071067810e0 * a * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.4e1 - 0.6e1 * a * a * x * x + 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - pow(a, 0.6e1) * pow(x, 0.6e1) / 0.6e1);
return retval;
}

double PHO_4_0( const double a, const double x )
{
double retval = 0.2828427124e0 * a * sqrt(0.5e1) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.5e1 - 0.10e2 * a * a * x * x + 0.5e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.5e1 / 0.6e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + pow(a, 0.8e1) * pow(x, 0.8e1) / 0.24e2);
return retval;
}

double PHO_5_0( const double a, const double x )
{
double retval = 0.2357022603e0 * a * sqrt(0.6e1) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.6e1 - 0.15e2 * a * a * x * x + 0.10e2 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.5e1 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + pow(a, 0.8e1) * pow(x, 0.8e1) / 0.4e1 - pow(a, 0.10e2) * pow(x, 0.10e2) / 0.120e3);
return retval;
}

double PHO_6_0( const double a, const double x )
{
double retval = 0.2020305089e0 * a * sqrt(0.7e1) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.7e1 - 0.21e2 * a * a * x * x + 0.35e2 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.35e2 / 0.6e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.7e1 / 0.8e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.7e1 / 0.120e3 * pow(a, 0.10e2) * pow(x, 0.10e2) + pow(a, 0.12e2) * pow(x, 0.12e2) / 0.720e3);
return retval;
}

double PHO_7_0( const double a, const double x )
{
double retval = 0.3535533905e0 * a * sqrt(0.2e1) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.8e1 - 0.28e2 * a * a * x * x + 0.28e2 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.35e2 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.7e1 / 0.3e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.7e1 / 0.30e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + pow(a, 0.12e2) * pow(x, 0.12e2) / 0.90e2 - pow(a, 0.14e2) * pow(x, 0.14e2) / 0.5040e4);
return retval;
}

double PHO_8_0( const double a, const double x )
{
double retval = 0.4714045207e0 * a * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.9e1 - 0.36e2 * a * a * x * x + 0.42e2 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.21e2 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.21e2 / 0.4e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.7e1 / 0.10e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + pow(a, 0.12e2) * pow(x, 0.12e2) / 0.20e2 - pow(a, 0.14e2) * pow(x, 0.14e2) / 0.560e3 + pow(a, 0.16e2) * pow(x, 0.16e2) / 0.40320e5);
return retval;
}

double PHO_9_0( const double a, const double x )
{
double retval = 0.1414213562e0 * a * sqrt(0.10e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.10e2 - 0.45e2 * a * a * x * x + 0.60e2 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.35e2 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.21e2 / 0.2e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.7e1 / 0.4e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + pow(a, 0.12e2) * pow(x, 0.12e2) / 0.6e1 - pow(a, 0.14e2) * pow(x, 0.14e2) / 0.112e3 + pow(a, 0.16e2) * pow(x, 0.16e2) / 0.4032e4 - pow(a, 0.18e2) * pow(x, 0.18e2) / 0.362880e6);
return retval;
}

double PHO_10_0( const double a, const double x )
{
double retval = 0.1285648693e0 * a * sqrt(0.11e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.11e2 - 0.55e2 * a * a * x * x + 0.165e3 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.55e2 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.77e2 / 0.4e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.77e2 / 0.20e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.11e2 / 0.24e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.11e2 / 0.336e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.11e2 / 0.8064e4 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.11e2 / 0.362880e6 * pow(a, 0.18e2) * pow(x, 0.18e2) + pow(a, 0.20e2) * pow(x, 0.20e2) / 0.3628800e7);
return retval;
}

double PHO_11_0( const double a, const double x )
{
double retval = 0.2357022603e0 * a * sqrt(0.3e1) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.12e2 - 0.66e2 * a * a * x * x + 0.110e3 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.165e3 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.33e2 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.77e2 / 0.10e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.11e2 / 0.10e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.11e2 / 0.112e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.11e2 / 0.2016e4 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.11e2 / 0.60480e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + pow(a, 0.20e2) * pow(x, 0.20e2) / 0.302400e6 - pow(a, 0.22e2) * pow(x, 0.22e2) / 0.39916800e8);
return retval;
}

double PHO_12_0( const double a, const double x )
{
double retval = 0.1087856586e0 * a * sqrt(0.13e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.13e2 - 0.78e2 * a * a * x * x + 0.143e3 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.715e3 / 0.6e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.429e3 / 0.8e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.143e3 / 0.10e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.143e3 / 0.60e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.143e3 / 0.560e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.143e3 / 0.8064e4 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.143e3 / 0.181440e6 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.13e2 / 0.604800e6 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.13e2 / 0.39916800e8 * pow(a, 0.22e2) * pow(x, 0.22e2) + pow(a, 0.24e2) * pow(x, 0.24e2) / 0.479001600e9);
return retval;
}

double PHO_13_0( const double a, const double x )
{
double retval = 0.1010152544e0 * a * sqrt(0.14e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.14e2 - 0.91e2 * a * a * x * x + 0.182e3 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.1001e4 / 0.6e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.1001e4 / 0.12e2 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.1001e4 / 0.40e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.143e3 / 0.30e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.143e3 / 0.240e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.143e3 / 0.2880e4 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.143e3 / 0.51840e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.13e2 / 0.129600e6 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.13e2 / 0.5702400e7 * pow(a, 0.22e2) * pow(x, 0.22e2) + pow(a, 0.24e2) * pow(x, 0.24e2) / 0.34214400e8 - pow(a, 0.26e2) * pow(x, 0.26e2) / 0.6227020800e10);
return retval;
}

double PHO_14_0( const double a, const double x )
{
double retval = 0.9428090413e-1 * a * sqrt(0.15e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.15e2 - 0.105e3 * a * a * x * x + 0.455e3 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.455e3 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.1001e4 / 0.8e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.1001e4 / 0.24e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.143e3 / 0.16e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.143e3 / 0.112e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.143e3 / 0.1152e4 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.143e3 / 0.17280e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.13e2 / 0.34560e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.13e2 / 0.1140480e7 * pow(a, 0.22e2) * pow(x, 0.22e2) + pow(a, 0.24e2) * pow(x, 0.24e2) / 0.4561920e7 - pow(a, 0.26e2) * pow(x, 0.26e2) / 0.415134720e9 + pow(a, 0.28e2) * pow(x, 0.28e2) / 0.87178291200e11);
return retval;
}

double PHO_15_0( const double a, const double x )
{
double retval = 0.3535533905e0 * a * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.16e2 - 0.120e3 * a * a * x * x + 0.280e3 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.910e3 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.182e3 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.1001e4 / 0.15e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.143e3 / 0.9e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.143e3 / 0.56e2 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.143e3 / 0.504e3 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.143e3 / 0.6480e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.13e2 / 0.10800e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.13e2 / 0.285120e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + pow(a, 0.24e2) * pow(x, 0.24e2) / 0.855360e6 - pow(a, 0.26e2) * pow(x, 0.26e2) / 0.51891840e8 + pow(a, 0.28e2) * pow(x, 0.28e2) / 0.5448643200e10 - pow(a, 0.30e2) * pow(x, 0.30e2) / 0.1307674368000e13);
return retval;
}

double PHO_16_0( const double a, const double x )
{
double retval = 0.8318903306e-1 * a * sqrt(0.17e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.17e2 - 0.136e3 * a * a * x * x + 0.340e3 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.1190e4 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.1547e4 / 0.6e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.1547e4 / 0.15e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.2431e4 / 0.90e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.2431e4 / 0.504e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.2431e4 / 0.4032e4 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.2431e4 / 0.45360e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.221e3 / 0.64800e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.221e3 / 0.1425600e7 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.17e2 / 0.3421440e7 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.17e2 / 0.155675520e9 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.17e2 / 0.10897286400e11 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.17e2 / 0.1307674368000e13 * pow(a, 0.30e2) * pow(x, 0.30e2) + pow(a, 0.32e2) * pow(x, 0.32e2) / 0.20922789888000e14);
return retval;
}

double PHO_17_0( const double a, const double x )
{
double retval = 0.2357022603e0 * a * sqrt(0.2e1) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.18e2 - 0.153e3 * a * a * x * x + 0.408e3 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.510e3 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.357e3 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.1547e4 / 0.10e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.221e3 / 0.5e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.2431e4 / 0.280e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.2431e4 / 0.2016e4 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.2431e4 / 0.20160e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.221e3 / 0.25200e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.221e3 / 0.475200e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.17e2 / 0.950400e6 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.17e2 / 0.34594560e8 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.17e2 / 0.1816214400e10 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.17e2 / 0.145297152000e12 * pow(a, 0.30e2) * pow(x, 0.30e2) + pow(a, 0.32e2) * pow(x, 0.32e2) / 0.1162377216000e13 - pow(a, 0.34e2) * pow(x, 0.34e2) / 0.355687428096000e15);
return retval;
}

double PHO_18_0( const double a, const double x )
{
double retval = 0.7443229274e-1 * a * sqrt(0.19e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.19e2 - 0.171e3 * a * a * x * x + 0.969e3 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.646e3 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.969e3 / 0.2e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.2261e4 / 0.10e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.4199e4 / 0.60e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.4199e4 / 0.280e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.46189e5 / 0.20160e5 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.46189e5 / 0.181440e6 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.4199e4 / 0.201600e6 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.4199e4 / 0.3326400e7 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.323e3 / 0.5702400e7 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.323e3 / 0.172972800e9 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.323e3 / 0.7264857600e10 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.323e3 / 0.435891456000e12 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.19e2 / 0.2324754432000e13 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.19e2 / 0.355687428096000e15 * pow(a, 0.34e2) * pow(x, 0.34e2) + pow(a, 0.36e2) * pow(x, 0.36e2) / 0.6402373705728000e16);
return retval;
}

double PHO_19_0( const double a, const double x )
{
double retval = 0.1414213562e0 * a * sqrt(0.5e1) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.20e2 - 0.190e3 * a * a * x * x + 0.570e3 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.1615e4 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.646e3 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.323e3 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.323e3 / 0.3e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.4199e4 / 0.168e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.4199e4 / 0.1008e4 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.46189e5 / 0.90720e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.4199e4 / 0.90720e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.4199e4 / 0.1330560e7 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.323e3 / 0.1995840e7 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.323e3 / 0.51891840e8 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.323e3 / 0.1816214400e10 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.323e3 / 0.87178291200e11 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.19e2 / 0.348713164800e12 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.19e2 / 0.35568742809600e14 * pow(a, 0.34e2) * pow(x, 0.34e2) + pow(a, 0.36e2) * pow(x, 0.36e2) / 0.320118685286400e15 - pow(a, 0.38e2) * pow(x, 0.38e2) / 0.121645100408832000e18);
return retval;
}

double PHO_20_0( const double a, const double x )
{
double retval = 0.6734350295e-1 * a * sqrt(0.21e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.21e2 - 0.210e3 * a * a * x * x + 0.665e3 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.1995e4 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.6783e4 / 0.8e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.2261e4 / 0.5e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.323e3 / 0.2e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.323e3 / 0.8e1 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.4199e4 / 0.576e3 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.4199e4 / 0.4320e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.4199e4 / 0.43200e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.4199e4 / 0.570240e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.323e3 / 0.760320e6 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.323e3 / 0.17297280e8 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.323e3 / 0.518918400e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.323e3 / 0.20756736000e11 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.19e2 / 0.66421555200e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.19e2 / 0.5081248972800e13 * pow(a, 0.34e2) * pow(x, 0.34e2) + pow(a, 0.36e2) * pow(x, 0.36e2) / 0.30487493836800e14 - pow(a, 0.38e2) * pow(x, 0.38e2) / 0.5792623828992000e16 + pow(a, 0.40e2) * pow(x, 0.40e2) / 0.2432902008176640000e19);
return retval;
}

double PHO_21_0( const double a, const double x )
{
double retval = 0.6428243464e-1 * a * sqrt(0.22e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.22e2 - 0.231e3 * a * a * x * x + 0.770e3 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.7315e4 / 0.6e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.4389e4 / 0.4e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.24871e5 / 0.40e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.3553e4 / 0.15e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.3553e4 / 0.56e2 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.3553e4 / 0.288e3 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.46189e5 / 0.25920e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.4199e4 / 0.21600e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.4199e4 / 0.259200e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.323e3 / 0.311040e6 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.323e3 / 0.6289920e7 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.323e3 / 0.165110400e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.323e3 / 0.5660928000e10 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.19e2 / 0.15095808000e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.19e2 / 0.923863449600e12 * pow(a, 0.34e2) * pow(x, 0.34e2) + pow(a, 0.36e2) * pow(x, 0.36e2) / 0.4157385523200e13 - pow(a, 0.38e2) * pow(x, 0.38e2) / 0.526602166272000e15 + pow(a, 0.40e2) * pow(x, 0.40e2) / 0.110586454917120000e18 - pow(a, 0.42e2) * pow(x, 0.42e2) / 0.51090942171709440000e20);
return retval;
}

double PHO_22_0( const double a, const double x )
{
double retval = 0.6148754617e-1 * a * sqrt(0.23e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.23e2 - 0.253e3 * a * a * x * x + 0.1771e4 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.8855e4 / 0.6e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.33649e5 / 0.24e2 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.33649e5 / 0.40e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.81719e5 / 0.240e3 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.81719e5 / 0.840e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.81719e5 / 0.4032e4 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.81719e5 / 0.25920e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.96577e5 / 0.259200e6 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.96577e5 / 0.2851200e7 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.7429e4 / 0.3110400e7 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.7429e4 / 0.56609280e8 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.7429e4 / 0.1320883200e10 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.7429e4 / 0.39626496000e11 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.437e3 / 0.90574848000e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.437e3 / 0.4619317248000e13 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.23e2 / 0.16629542092800e14 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.23e2 / 0.1579806498816000e16 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.23e2 / 0.221172909834240000e18 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.23e2 / 0.51090942171709440000e20 * pow(a, 0.42e2) * pow(x, 0.42e2) + pow(a, 0.44e2) * pow(x, 0.44e2) / 0.1124000727777607680000e22);
return retval;
}

double PHO_23_0( const double a, const double x )
{
double retval = 0.1178511302e0 * a * sqrt(0.6e1) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.24e2 - 0.276e3 * a * a * x * x + 0.1012e4 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.1771e4 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.1771e4 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.33649e5 / 0.30e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.4807e4 / 0.10e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.81719e5 / 0.560e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.81719e5 / 0.2520e4 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.81719e5 / 0.15120e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.7429e4 / 0.10800e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.96577e5 / 0.1425600e7 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.7429e4 / 0.1425600e7 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.7429e4 / 0.23587200e8 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.7429e4 / 0.495331200e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.7429e4 / 0.13208832000e11 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.437e3 / 0.26417664000e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.437e3 / 0.1154829312000e13 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.23e2 / 0.3464487936000e13 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.23e2 / 0.263301083136000e15 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.23e2 / 0.27646613729280000e17 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.23e2 / 0.4257578514309120000e19 * pow(a, 0.42e2) * pow(x, 0.42e2) + pow(a, 0.44e2) * pow(x, 0.44e2) / 0.46833363657400320000e20 - pow(a, 0.46e2) * pow(x, 0.46e2) / 0.25852016738884976640000e23);
return retval;
}

double PHO_24_0( const double a, const double x )
{
double retval = 0.2828427124e0 * a * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.25e2 - 0.23e2 / 0.510909421717094400e18 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.23e2 / 0.4423458196684800e16 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.23e2 / 0.52660216627200e14 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.23e2 / 0.831477104640e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.24035e5 / 0.112e3 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.437e3 / 0.323352207360e12 * pow(a, 0.34e2) * pow(x, 0.34e2) + pow(a, 0.48e2) * pow(x, 0.48e2) / 0.620448401733239439360000e24 + 0.24035e5 / 0.36e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.8855e4 / 0.6e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.8855e4 / 0.4e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.6325e4 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.437e3 / 0.8453652480e10 * pow(a, 0.32e2) * pow(x, 0.32e2) + 0.1150e4 * pow(a, 0.4e1) * pow(x, 0.4e1) + pow(a, 0.44e2) * pow(x, 0.44e2) / 0.3746669092592025600e19 - 0.300e3 * a * a * x * x - 0.7429e4 / 0.4755179520e10 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.7429e4 / 0.198132480e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - pow(a, 0.46e2) * pow(x, 0.46e2) / 0.1034080669555399065600e22 - 0.7429e4 / 0.10378368e8 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.7429e4 / 0.684288e6 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.7429e4 / 0.57024e5 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.7429e4 / 0.6048e4 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.81719e5 / 0.9072e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.408595e6 / 0.8064e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_25_0( const double a, const double x )
{
double retval = 0.5439282931e-1 * a * sqrt(0.26e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.26e2 - 0.23e2 / 0.78601449494937600e17 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.23e2 / 0.850665037824000e15 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.23e2 / 0.12152357683200e14 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.23e2 / 0.223859220480e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.312455e6 / 0.1008e4 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.437e3 / 0.99492986880e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + pow(a, 0.48e2) * pow(x, 0.48e2) / 0.23863400066663055360000e23 + 0.16445e5 / 0.18e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.23023e5 / 0.12e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.16445e5 / 0.6e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.7475e4 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - pow(a, 0.50e2) * pow(x, 0.50e2) / 0.15511210043330985984000000e26 + 0.437e3 / 0.2926264320e10 * pow(a, 0.32e2) * pow(x, 0.32e2) + 0.1300e4 * pow(a, 0.4e1) * pow(x, 0.4e1) + pow(a, 0.44e2) * pow(x, 0.44e2) / 0.432307972222156800e18 - 0.325e3 * a * a * x * x - 0.7429e4 / 0.1828915200e10 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.7429e4 / 0.83825280e8 * pow(a, 0.28e2) * pow(x, 0.28e2) - pow(a, 0.46e2) * pow(x, 0.46e2) / 0.79544666888876851200e20 - 0.7429e4 / 0.4790016e7 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.7429e4 / 0.342144e6 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.96577e5 / 0.399168e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.96577e5 / 0.45360e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.1062347e7 / 0.72576e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.312455e6 / 0.4032e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_26_0( const double a, const double x )
{
double retval = 0.1571348402e0 * a * sqrt(0.3e1) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.27e2 - 0.23e2 / 0.14555823980544000e17 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.23e2 / 0.189036675072000e15 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.23e2 / 0.3150611251200e13 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.23e2 / 0.66328657920e11 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.49335e5 / 0.112e3 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.437e3 / 0.33164328960e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + pow(a, 0.48e2) * pow(x, 0.48e2) / 0.1767659264197263360000e22 + 0.9867e4 / 0.8e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.9867e4 / 0.4e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.13455e5 / 0.4e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.2925e4 * pow(a, 0.6e1) * pow(x, 0.6e1) - pow(a, 0.50e2) * pow(x, 0.50e2) / 0.574489260864110592000000e24 + 0.437e3 / 0.1083801600e10 * pow(a, 0.32e2) * pow(x, 0.32e2) + 0.2925e4 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) + pow(a, 0.44e2) * pow(x, 0.44e2) / 0.64045625514393600e17 - 0.351e3 * a * a * x * x - 0.7429e4 / 0.745113600e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.7429e4 / 0.37255680e8 * pow(a, 0.28e2) * pow(x, 0.28e2) - pow(a, 0.46e2) * pow(x, 0.46e2) / 0.8838296320986316800e19 - 0.7429e4 / 0.2306304e7 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.7429e4 / 0.177408e6 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.96577e5 / 0.221760e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.96577e5 / 0.26880e5 * pow(a, 0.20e2) * pow(x, 0.20e2) + pow(a, 0.52e2) * pow(x, 0.52e2) / 0.403291461126605635584000000e27 - 0.62491e5 / 0.2688e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.312455e6 / 0.2688e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_27_0( const double a, const double x )
{
double retval = 0.1010152544e0 * a * sqrt(0.7e1) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.28e2 - 0.23e2 / 0.3119105138688000e16 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.23e2 / 0.47259168768000e14 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.23e2 / 0.900174643200e12 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.23e2 / 0.21319925760e11 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.9867e4 / 0.16e2 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.437e3 / 0.11844403200e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + pow(a, 0.48e2) * pow(x, 0.48e2) / 0.189392064021135360000e21 + 0.3289e4 / 0.2e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.6279e4 / 0.2e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.4095e4 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.6825e4 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - pow(a, 0.50e2) * pow(x, 0.50e2) / 0.41034947204579328000000e23 + 0.437e3 / 0.425779200e9 * pow(a, 0.32e2) * pow(x, 0.32e2) + 0.1638e4 * pow(a, 0.4e1) * pow(x, 0.4e1) + pow(a, 0.44e2) * pow(x, 0.44e2) / 0.11436718841856000e17 - 0.378e3 * a * a * x * x - 0.7429e4 / 0.319334400e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.7429e4 / 0.17297280e8 * pow(a, 0.28e2) * pow(x, 0.28e2) - pow(a, 0.46e2) * pow(x, 0.46e2) / 0.1262613760140902400e19 - 0.7429e4 / 0.1153152e7 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.7429e4 / 0.95040e5 * pow(a, 0.24e2) * pow(x, 0.24e2) - pow(a, 0.54e2) * pow(x, 0.54e2) / 0.10888869450418352160768000000e29 - 0.96577e5 / 0.126720e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.5681e4 / 0.960e3 * pow(a, 0.20e2) * pow(x, 0.20e2) + pow(a, 0.52e2) * pow(x, 0.52e2) / 0.14403266468807344128000000e26 - 0.62491e5 / 0.1728e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.16445e5 / 0.96e2 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_28_0( const double a, const double x )
{
double retval = 0.4876598490e-1 * a * sqrt(0.29e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.29e2 - 0.667e3 / 0.21833735970816000e17 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.667e3 / 0.378073350144000e15 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.667e3 / 0.8101571788800e13 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.667e3 / 0.213199257600e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.95381e5 / 0.112e3 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.12673e5 / 0.130288435200e12 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.29e2 / 0.757568256084541440000e21 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.8671e4 / 0.4e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.7917e4 / 0.2e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.39585e5 / 0.8e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.7917e4 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.29e2 / 0.123104841613737984000000e24 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.12673e5 / 0.5109350400e10 * pow(a, 0.32e2) * pow(x, 0.32e2) + 0.1827e4 * pow(a, 0.4e1) * pow(x, 0.4e1) + 0.29e2 / 0.68620313051136000e17 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.406e3 * a * a * x * x - 0.215441e6 / 0.4151347200e10 * pow(a, 0.30e2) * pow(x, 0.30e2) + pow(a, 0.56e2) * pow(x, 0.56e2) / 0.304888344611713860501504000000e30 + 0.215441e6 / 0.242161920e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.29e2 / 0.6313068800704512000e19 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.215441e6 / 0.17297280e8 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.215441e6 / 0.1520640e7 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.29e2 / 0.10888869450418352160768000000e29 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.164749e6 / 0.126720e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.164749e6 / 0.17280e5 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.29e2 / 0.28806532937614688256000000e26 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.95381e5 / 0.1728e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.95381e5 / 0.384e3 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_29_0( const double a, const double x )
{
double retval = 0.4714045207e-1 * a * sqrt(0.30e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.30e2 - 0.667e3 / 0.5822329592217600e16 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.667e3 / 0.113422005043200e15 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.667e3 / 0.2700523929600e13 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.667e3 / 0.78173061120e11 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.130065e6 / 0.112e3 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.12673e5 / 0.52115374080e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.29e2 / 0.126261376014090240000e21 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.5655e4 / 0.2e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.39585e5 / 0.8e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.23751e5 / 0.4e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.9135e4 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.29e2 / 0.16413978881831731200000e23 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.12673e5 / 0.2214051840e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - pow(a, 0.58e2) * pow(x, 0.58e2) / 0.8841761993739701954543616000000e31 + 0.2030e4 * pow(a, 0.4e1) * pow(x, 0.4e1) + 0.29e2 / 0.16011406378598400e17 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.435e3 * a * a * x * x - 0.215441e6 / 0.1937295360e10 * pow(a, 0.30e2) * pow(x, 0.30e2) + pow(a, 0.56e2) * pow(x, 0.56e2) / 0.10162944820390462016716800000e29 + 0.215441e6 / 0.121080960e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.29e2 / 0.1262613760140902400e19 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.215441e6 / 0.9225216e7 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.12673e5 / 0.50688e5 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.29e2 / 0.725924630027890144051200000e27 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.164749e6 / 0.76032e5 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.8671e4 / 0.576e3 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.29e2 / 0.2880653293761468825600000e25 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.95381e5 / 0.1152e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.476905e6 / 0.1344e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_30_0( const double a, const double x )
{
double retval = 0.4561979232e-1 * a * sqrt(0.31e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.31e2 - 0.20677e5 / 0.52400966329958400e17 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.20677e5 / 0.1134220050432000e16 * pow(a, 0.40e2) * pow(x, 0.40e2) + pow(a, 0.60e2) * pow(x, 0.60e2) / 0.265252859812191058636308480000000e33 - 0.20677e5 / 0.29705763225600e14 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.20677e5 / 0.938076733440e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.175305e6 / 0.112e3 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.392863e6 / 0.677499863040e12 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.899e3 / 0.757568256084541440000e21 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.58435e5 / 0.16e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.245427e6 / 0.40e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.56637e5 / 0.8e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.31465e5 / 0.6e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.899e3 / 0.82069894409158656000000e23 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.392863e6 / 0.30996725760e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.31e2 / 0.8841761993739701954543616000000e31 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.4495e4 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) + 0.899e3 / 0.128091251028787200e18 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.465e3 * a * a * x * x - 0.6678671e7 / 0.29059430400e11 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.31e2 / 0.20325889640780924033433600000e29 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.6678671e7 / 0.1937295360e10 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.899e3 / 0.8838296320986316800e19 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.392863e6 / 0.9225216e7 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.392863e6 / 0.912384e6 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.899e3 / 0.2177773890083670432153600000e28 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.268801e6 / 0.76032e5 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.268801e6 / 0.11520e5 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.899e3 / 0.11522613175045875302400000e26 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.2956811e7 / 0.24192e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.1344005e7 / 0.2688e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_31_0( const double a, const double x )
{
double retval = 0.1767766952e0 * a * sqrt(0.2e1) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.32e2 - 0.20677e5 / 0.16375301978112000e17 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.20677e5 / 0.389888142336000e15 * pow(a, 0.40e2) * pow(x, 0.40e2) + pow(a, 0.60e2) * pow(x, 0.60e2) / 0.8289151869130970582384640000000e31 - 0.20677e5 / 0.11139661209600e14 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.20677e5 / 0.381093672960e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.58435e5 / 0.28e2 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.392863e6 / 0.296406190080e12 * pow(a, 0.34e2) * pow(x, 0.34e2) - pow(a, 0.62e2) * pow(x, 0.62e2) / 0.8222838654177922817725562880000000e34 + 0.899e3 / 0.165718056018493440000e21 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.23374e5 / 0.5e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.37758e5 / 0.5e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.25172e5 / 0.3e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.17980e5 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.899e3 / 0.15388105201717248000000e23 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.392863e6 / 0.14529715200e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.31e2 / 0.552610124608731372158976000000e30 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.2480e4 * pow(a, 0.4e1) * pow(x, 0.4e1) + 0.899e3 / 0.36025664351846400e17 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.496e3 * a * a * x * x - 0.6678671e7 / 0.14529715200e11 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.31e2 / 0.1905552153823211628134400000e28 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.392863e6 / 0.60540480e8 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.899e3 / 0.2209574080246579200e19 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.392863e6 / 0.5189184e7 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.20677e5 / 0.28512e5 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.899e3 / 0.272221736260458804019200000e27 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.268801e6 / 0.47520e5 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.268801e6 / 0.7560e4 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.899e3 / 0.1800408308600918016000000e25 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.268801e6 / 0.1512e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.58435e5 / 0.84e2 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_32_0( const double a, const double x )
{
double retval = 0.4285495642e-1 * a * sqrt(0.33e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.33e2 - 0.20677e5 / 0.5458433992704000e16 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.20677e5 / 0.141777506304000e15 * pow(a, 0.40e2) * pow(x, 0.40e2) + pow(a, 0.60e2) * pow(x, 0.60e2) / 0.502372840553392156508160000000e30 - 0.20677e5 / 0.4388351385600e13 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.20677e5 / 0.161676103680e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.385671e6 / 0.140e3 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.392863e6 / 0.134730086400e12 * pow(a, 0.34e2) * pow(x, 0.34e2) + pow(a, 0.64e2) * pow(x, 0.64e2) / 0.263130836933693530167218012160000000e36 - pow(a, 0.62e2) * pow(x, 0.62e2) / 0.249176928914482509628047360000000e33 + 0.899e3 / 0.40174074186301440000e20 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.29667e5 / 0.5e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.138446e6 / 0.15e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.9889e4 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.6820e4 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.899e3 / 0.3264143527636992000000e22 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.392863e6 / 0.7044710400e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.31e2 / 0.50237284055339215650816000000e29 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.2728e4 * pow(a, 0.4e1) * pow(x, 0.4e1) + 0.899e3 / 0.10916867985408000e17 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.528e3 * a * a * x * x - 0.392863e6 / 0.440294400e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.31e2 / 0.230976018645237773107200000e27 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.392863e6 / 0.33022080e8 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.899e3 / 0.602611112794521600e18 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.20677e5 / 0.157248e6 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.20677e5 / 0.17280e5 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.899e3 / 0.41245717615221030912000000e26 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.268801e6 / 0.30240e5 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.268801e6 / 0.5040e4 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.899e3 / 0.327346965200166912000000e24 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.128557e6 / 0.504e3 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.642785e6 / 0.672e3 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_33_0( const double a, const double x )
{
double retval = 0.4159451653e-1 * a * sqrt(0.34e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.34e2 - 0.20677e5 / 0.1926506115072000e16 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.20677e5 / 0.54209046528000e14 * pow(a, 0.40e2) * pow(x, 0.40e2) + pow(a, 0.60e2) * pow(x, 0.60e2) / 0.44327015342946366750720000000e29 - 0.20677e5 / 0.1806968217600e13 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.20677e5 / 0.71327692800e11 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.504339e6 / 0.140e3 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.392863e6 / 0.63402393600e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + pow(a, 0.64e2) * pow(x, 0.64e2) / 0.7739142262755692063741706240000000e34 - pow(a, 0.62e2) * pow(x, 0.62e2) / 0.14657466406734265272238080000000e32 + 0.899e3 / 0.10634313755197440000e20 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.336226e6 / 0.45e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.168113e6 / 0.15e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.11594e5 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.23188e5 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.899e3 / 0.768033771208704000000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.392863e6 / 0.3522355200e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.31e2 / 0.5910268712392848900096000000e28 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.2992e4 * pow(a, 0.4e1) * pow(x, 0.4e1) + 0.899e3 / 0.3531927877632000e16 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.561e3 * a * a * x * x - 0.6678671e7 / 0.3962649600e10 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.31e2 / 0.33967061565476143104000000e26 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.351509e6 / 0.16511040e8 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.899e3 / 0.177238562586624000e18 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.351509e6 / 0.1572480e7 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.351509e6 / 0.181440e6 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.899e3 / 0.7278656049744887808000000e25 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.4569617e7 / 0.332640e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.198679e6 / 0.2520e4 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.899e3 / 0.67394963423563776000000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) - pow(a, 0.66e2) * pow(x, 0.66e2) / 0.8683317618811886495518194401280000000e37 - 0.2185469e7 / 0.6048e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.2185469e7 / 0.1680e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_34_0( const double a, const double x )
{
double retval = 0.4040610177e-1 * a * sqrt(0.35e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.35e2 - 0.20677e5 / 0.715559414169600e15 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.20677e5 / 0.21683618611200e14 * pow(a, 0.40e2) * pow(x, 0.40e2) + pow(a, 0.60e2) * pow(x, 0.60e2) / 0.5065944610622441914368000000e28 - 0.20677e5 / 0.774414950400e12 * pow(a, 0.38e2) * pow(x, 0.38e2) + pow(a, 0.68e2) * pow(x, 0.68e2) / 0.295232799039604140847618609643520000000e39 + 0.20677e5 / 0.32606945280e11 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.168113e6 / 0.36e2 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.392863e6 / 0.30795448320e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + pow(a, 0.64e2) * pow(x, 0.64e2) / 0.442236700728896689356668928000000e33 - pow(a, 0.62e2) * pow(x, 0.62e2) / 0.1256354263434365594763264000000e31 + 0.899e3 / 0.3038375358627840000e19 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.168113e6 / 0.18e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.40579e5 / 0.3e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.40579e5 / 0.3e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.26180e5 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.899e3 / 0.197494398310809600000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.392863e6 / 0.1811496960e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.31e2 / 0.844324101770406985728000000e27 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.6545e4 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) + 0.899e3 / 0.1210946700902400e16 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.595e3 * a * a * x * x - 0.351509e6 / 0.113218560e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.31e2 / 0.5822924839795910246400000e25 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.351509e6 / 0.9434880e7 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.899e3 / 0.55703548241510400e17 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.351509e6 / 0.943488e6 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.351509e6 / 0.114048e6 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.899e3 / 0.1455731209948977561600000e25 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.198679e6 / 0.9504e4 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.198679e6 / 0.1728e4 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.899e3 / 0.15404563068243148800000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) - pow(a, 0.66e2) * pow(x, 0.66e2) / 0.248094789108911042729091268608000000e36 - 0.2185469e7 / 0.4320e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.168113e6 / 0.96e2 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_35_0( const double a, const double x )
{
double retval = 0.2357022603e0 * a * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.36e2 - 0.20677e5 / 0.278273105510400e15 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.20677e5 / 0.9034841088000e13 * pow(a, 0.40e2) * pow(x, 0.40e2) + pow(a, 0.60e2) * pow(x, 0.60e2) / 0.703603418142005821440000000e27 - 0.20677e5 / 0.344184422400e12 * pow(a, 0.38e2) * pow(x, 0.38e2) + pow(a, 0.68e2) * pow(x, 0.68e2) / 0.8200911084433448356878294712320000000e37 + 0.20677e5 / 0.15397724160e11 * pow(a, 0.36e2) * pow(x, 0.36e2) - pow(a, 0.70e2) * pow(x, 0.70e2) / 0.10333147966386144929666651337523200000000e41 - 0.168113e6 / 0.28e2 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.392863e6 / 0.15397724160e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + pow(a, 0.64e2) * pow(x, 0.64e2) / 0.36853058394074724113055744000000e32 - pow(a, 0.62e2) * pow(x, 0.62e2) / 0.139594918159373954973696000000e30 + 0.899e3 / 0.928392470691840000e18 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.11594e5 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.81158e5 / 0.5e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.15708e5 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.19635e5 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.899e3 / 0.54859555086336000000e20 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.20677e5 / 0.50319360e8 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.31e2 / 0.140720683628401164288000000e27 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.3570e4 * pow(a, 0.4e1) * pow(x, 0.4e1) + 0.899e3 / 0.437286308659200e15 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.630e3 * a * a * x * x - 0.351509e6 / 0.62899200e8 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.31e2 / 0.1132235385515871436800000e25 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.351509e6 / 0.5503680e7 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.899e3 / 0.18567849413836800e17 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.351509e6 / 0.576576e6 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.15283e5 / 0.3168e4 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.899e3 / 0.323495824433106124800000e24 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.198679e6 / 0.6336e4 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.198679e6 / 0.1200e4 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.899e3 / 0.3851140767060787200000e22 * pow(a, 0.52e2) * pow(x, 0.52e2) - pow(a, 0.66e2) * pow(x, 0.66e2) / 0.13783043839383946818282848256000000e35 - 0.168113e6 / 0.240e3 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.168113e6 / 0.72e2 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_36_0( const double a, const double x )
{
double retval = 0.3822198816e-1 * a * sqrt(0.37e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.37e2 - 0.765049e6 / 0.4174096582656000e16 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.765049e6 / 0.144557457408000e15 * pow(a, 0.40e2) * pow(x, 0.40e2) + 0.37e2 / 0.4221620508852034928640000000e28 * pow(a, 0.60e2) * pow(x, 0.60e2) - 0.765049e6 / 0.5851135180800e13 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.37e2 / 0.16401822168866896713756589424640000000e38 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.765049e6 / 0.277159034880e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.37e2 / 0.10333147966386144929666651337523200000000e41 * pow(a, 0.70e2) * pow(x, 0.70e2) + pow(a, 0.72e2) * pow(x, 0.72e2) / 0.371993326789901217467999448150835200000000e42 - 0.214489e6 / 0.28e2 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.765049e6 / 0.15397724160e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.37e2 / 0.147412233576298896452222976000000e33 * pow(a, 0.64e2) * pow(x, 0.64e2) - 0.37e2 / 0.697974590796869774868480000000e30 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.33263e5 / 0.11140709648302080000e20 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.214489e6 / 0.15e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.96866e5 / 0.5e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.145299e6 / 0.8e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.22015e5 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.33263e5 / 0.603455105949696000000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.765049e6 / 0.1006387200e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.1147e4 / 0.985044785398808150016000000e27 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.3885e4 * pow(a, 0.4e1) * pow(x, 0.4e1) + 0.33263e5 / 0.6122008321228800e16 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.666e3 * a * a * x * x - 0.13005833e8 / 0.1320883200e10 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.1147e4 / 0.9057883084126971494400000e25 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.13005833e8 / 0.121080960e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.33263e5 / 0.241382042379878400e18 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.565471e6 / 0.576576e6 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.565471e6 / 0.76032e5 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.33263e5 / 0.2911462419897955123200000e25 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.7351123e7 / 0.158400e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.565471e6 / 0.2400e4 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.33263e5 / 0.38511407670607872000000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.37e2 / 0.41349131518151840454848544768000000e35 * pow(a, 0.66e2) * pow(x, 0.66e2) - 0.6220181e7 / 0.6480e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.6220181e7 / 0.2016e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_37_0( const double a, const double x )
{
double retval = 0.3721614637e-1 * a * sqrt(0.38e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.38e2 - 0.765049e6 / 0.1757514350592000e16 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.765049e6 / 0.64670441472000e14 * pow(a, 0.40e2) * pow(x, 0.40e2) + 0.37e2 / 0.777666935841164328960000000e27 * pow(a, 0.60e2) * pow(x, 0.60e2) - 0.765049e6 / 0.2771590348800e13 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.37e2 / 0.1294880697542123424770257059840000000e37 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.765049e6 / 0.138579517440e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.37e2 / 0.543849892967691838403507965132800000000e39 * pow(a, 0.70e2) * pow(x, 0.70e2) + pow(a, 0.72e2) * pow(x, 0.72e2) / 0.9789298073418453091263143372390400000000e40 - pow(a, 0.74e2) * pow(x, 0.74e2) / 0.13763753091226345046315979581580902400000000e44 - 0.4075291e7 / 0.420e3 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.14535931e8 / 0.153977241600e12 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.37e2 / 0.19396346523197223217397760000000e32 * pow(a, 0.64e2) * pow(x, 0.64e2) - 0.37e2 / 0.110206514336347859189760000000e30 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.33263e5 / 0.3811295405998080000e19 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.262922e6 / 0.15e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.920227e6 / 0.40e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.83657e5 / 0.4e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.24605e5 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.33263e5 / 0.190564770299904000000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.14535931e8 / 0.10567065600e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.1147e4 / 0.207377849557643821056000000e27 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.4218e4 * pow(a, 0.4e1) * pow(x, 0.4e1) + 0.33263e5 / 0.2416582232064000e16 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.703e3 * a * a * x * x - 0.247110827e9 / 0.14529715200e11 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.1147e4 / 0.2145288098872177459200000e25 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.10743949e8 / 0.60540480e8 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.33263e5 / 0.88930226139955200e17 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.10743949e8 / 0.6918912e7 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.10743949e8 / 0.950400e6 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.33263e5 / 0.766174321025777664000000e24 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.10743949e8 / 0.158400e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.10743949e8 / 0.32400e5 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.33263e5 / 0.11148039062544384000000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.37e2 / 0.4352540159805456889984057344000000e34 * pow(a, 0.66e2) * pow(x, 0.66e2) - 0.118183439e9 / 0.90720e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.4075291e7 / 0.1008e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_38_0( const double a, const double x )
{
double retval = 0.3626188621e-1 * a * sqrt(0.39e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.39e2 - 0.765049e6 / 0.766095998976000e15 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.765049e6 / 0.29847896064000e14 * pow(a, 0.40e2) * pow(x, 0.40e2) + 0.37e2 / 0.159521422736649093120000000e27 * pow(a, 0.60e2) * pow(x, 0.60e2) - 0.765049e6 / 0.1350261964800e13 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.37e2 / 0.132808276670987017925154570240000000e36 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.765049e6 / 0.71066419200e11 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.37e2 / 0.41834607151360910646423689625600000000e38 * pow(a, 0.70e2) * pow(x, 0.70e2) + pow(a, 0.72e2) * pow(x, 0.72e2) / 0.502015285816330927757084275507200000000e39 - pow(a, 0.74e2) * pow(x, 0.74e2) / 0.352916745928880642213230245681561600000000e42 - 0.1708993e7 / 0.140e3 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.14535931e8 / 0.82910822400e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.37e2 / 0.2984053311261111264215040000000e31 * pow(a, 0.64e2) * pow(x, 0.64e2) - 0.37e2 / 0.19780656419344487546880000000e29 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.33263e5 / 0.1368157325230080000e19 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.1708993e7 / 0.80e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.1087541e7 / 0.40e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.191919e6 / 0.8e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.27417e5 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.33263e5 / 0.63521590099968000000e20 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.14535931e8 / 0.5960908800e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.1147e4 / 0.47856426820994727936000000e26 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.9139e4 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) + 0.33263e5 / 0.991418351616000e15 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.741e3 * a * a * x * x - 0.10743949e8 / 0.372556800e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.1147e4 / 0.550073871505686528000000e24 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.10743949e8 / 0.37255680e8 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.33263e5 / 0.34203933130752000e17 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.10743949e8 / 0.4435200e7 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.10743949e8 / 0.633600e6 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.33263e5 / 0.216100449520091136000000e24 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.139671337e9 / 0.1425600e7 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.139671337e9 / 0.302400e6 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.33263e5 / 0.3430165865398272000000e22 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.37e2 / 0.558017969205827806408212480000000e33 * pow(a, 0.66e2) * pow(x, 0.66e2) + pow(a, 0.76e2) * pow(x, 0.76e2) / 0.523022617466601111760007224100074291200000000e45 - 0.52978783e8 / 0.30240e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.52978783e8 / 0.10080e5 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_39_0( const double a, const double x )
{
double retval = 0.7071067810e-1 * a * sqrt(0.10e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.40e2 - 0.765049e6 / 0.344743199539200e15 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.765049e6 / 0.14177750630400e14 * pow(a, 0.40e2) * pow(x, 0.40e2) + 0.37e2 / 0.35892320115746045952000000e26 * pow(a, 0.60e2) * pow(x, 0.60e2) - 0.765049e6 / 0.675130982400e12 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.37e2 / 0.16601034583873377240644321280000000e35 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.765049e6 / 0.37309870080e11 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.37e2 / 0.4183460715136091064642368962560000000e37 * pow(a, 0.70e2) * pow(x, 0.70e2) + pow(a, 0.72e2) * pow(x, 0.72e2) / 0.37651146436224819581781320663040000000e38 - pow(a, 0.74e2) * pow(x, 0.74e2) / 0.17645837296444032110661512284078080000000e41 - 0.1708993e7 / 0.112e3 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.14535931e8 / 0.45600952320e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.37e2 / 0.522209329470694471237632000000e30 * pow(a, 0.64e2) * pow(x, 0.64e2) - 0.37e2 / 0.3956131283868897509376000000e28 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.33263e5 / 0.513058996961280000e18 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.155363e6 / 0.6e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.63973e5 / 0.2e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.27417e5 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.45695e5 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.33263e5 / 0.22232556534988800000e20 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.631997e6 / 0.149022720e9 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.1147e4 / 0.11964106705248681984000000e26 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.4940e4 * pow(a, 0.4e1) * pow(x, 0.4e1) + 0.33263e5 / 0.421352799436800e15 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.780e3 * a * a * x * x - 0.10743949e8 / 0.223534080e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.1147e4 / 0.151270314664063795200000e24 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.10743949e8 / 0.23284800e8 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.33263e5 / 0.13681573252300800e17 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.10743949e8 / 0.2882880e7 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.10743949e8 / 0.427680e6 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.33263e5 / 0.64830134856027340800000e23 * pow(a, 0.54e2) * pow(x, 0.54e2) - pow(a, 0.78e2) * pow(x, 0.78e2) / 0.20397882081197443358640281739902897356800000000e47 - 0.139671337e9 / 0.997920e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.4816253e7 / 0.7560e4 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.33263e5 / 0.1114803906254438400000e22 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.37e2 / 0.83702695380874170961231872000000e32 * pow(a, 0.66e2) * pow(x, 0.66e2) + pow(a, 0.76e2) * pow(x, 0.76e2) / 0.13075565436665027794000180602501857280000000e44 - 0.52978783e8 / 0.22680e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.1708993e7 / 0.252e3 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_40_0( const double a, const double x )
{
double retval = 0.3449301371e-1 * a * sqrt(0.41e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.41e2 - 0.31367009e8 / 0.6550120791244800e16 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.31367009e8 / 0.283555012608000e15 * pow(a, 0.40e2) * pow(x, 0.40e2) + 0.1517e4 / 0.358923201157460459520000000e27 * pow(a, 0.60e2) * pow(x, 0.60e2) - 0.31367009e8 / 0.14177750630400e14 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.1517e4 / 0.99606207503240263443865927680000000e35 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.31367009e8 / 0.820817141760e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.1517e4 / 0.20917303575680455323211844812800000000e38 * pow(a, 0.70e2) * pow(x, 0.70e2) + 0.41e2 / 0.150604585744899278327125282652160000000e39 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.41e2 / 0.52937511889332096331984536852234240000000e41 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.6369883e7 / 0.336e3 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.25911877e8 / 0.45600952320e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.1517e4 / 0.4177674635765555769901056000000e31 * pow(a, 0.64e2) * pow(x, 0.64e2) - 0.1517e4 / 0.35605181554820077584384000000e29 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.1363783e7 / 0.8208943951380480000e19 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.374699e6 / 0.12e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.374699e6 / 0.10e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.374699e6 / 0.12e2 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.50635e5 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.1363783e7 / 0.333488348024832000000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.25911877e8 / 0.3576545280e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.47027e5 / 0.131605173757735501824000000e27 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.5330e4 * pow(a, 0.4e1) * pow(x, 0.4e1) + 0.1363783e7 / 0.7584350389862400e16 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.820e3 * a * a * x * x - 0.440501909e9 / 0.5588352000e10 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.47027e5 / 0.1815243775968765542400000e25 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.440501909e9 / 0.605404800e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.1363783e7 / 0.232586745289113600e18 * pow(a, 0.46e2) * pow(x, 0.46e2) + pow(a, 0.80e2) * pow(x, 0.80e2) / 0.815915283247897734345611269596115894272000000000e48 - 0.440501909e9 / 0.77837760e8 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.440501909e9 / 0.11975040e8 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.1363783e7 / 0.842791753128355430400000e24 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.41e2 / 0.20397882081197443358640281739902897356800000000e47 * pow(a, 0.78e2) * pow(x, 0.78e2) - 0.197466373e9 / 0.997920e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.197466373e9 / 0.226800e6 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.1363783e7 / 0.15607254687562137600000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.1517e4 / 0.585918867666119196728623104000000e33 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.41e2 / 0.26151130873330055588000361205003714560000000e44 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.70068713e8 / 0.22680e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.70068713e8 / 0.8064e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_41_0( const double a, const double x )
{
double retval = 0.3367175148e-1 * a * sqrt(0.42e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.42e2 - 0.31367009e8 / 0.3119105138688000e16 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.31367009e8 / 0.141777506304000e15 * pow(a, 0.40e2) * pow(x, 0.40e2) + 0.1517e4 / 0.94003695541239644160000000e26 * pow(a, 0.60e2) * pow(x, 0.60e2) - 0.31367009e8 / 0.7426440806400e13 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.1517e4 / 0.16601034583873377240644321280000000e35 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.1363783e7 / 0.19543265280e11 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.1517e4 / 0.2988186225097207903315977830400000000e37 * pow(a, 0.70e2) * pow(x, 0.70e2) + 0.41e2 / 0.17929117350583247419895866982400000000e38 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.41e2 / 0.5041667798984009174474717795450880000000e40 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.374699e6 / 0.16e2 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.25911877e8 / 0.26057687040e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.1517e4 / 0.895215993378333379264512000000e30 * pow(a, 0.64e2) * pow(x, 0.64e2) - 0.1517e4 / 0.8477424179719066091520000000e28 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.1363783e7 / 0.3322667789844480000e19 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.374699e6 / 0.10e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.2622893e7 / 0.60e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.70889e5 / 0.2e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.18655e5 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.1363783e7 / 0.127043180199936000000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.25911877e8 / 0.2128896000e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.47027e5 / 0.37601478216495857664000000e26 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.5740e4 * pow(a, 0.4e1) * pow(x, 0.4e1) - pow(a, 0.82e2) * pow(x, 0.82e2) / 0.33452526613163807108170062053440751665152000000000e50 + 0.1363783e7 / 0.3431015652556800e16 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.861e3 * a * a * x * x - 0.440501909e9 / 0.3459456000e10 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.47027e5 / 0.561861168752236953600000e24 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.440501909e9 / 0.389188800e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.1363783e7 / 0.99680033695334400e17 * pow(a, 0.46e2) * pow(x, 0.46e2) + pow(a, 0.80e2) * pow(x, 0.80e2) / 0.19426554363045184151085982609431330816000000000e47 - 0.440501909e9 / 0.51891840e8 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.15189721e8 / 0.285120e6 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.1363783e7 / 0.280930584376118476800000e24 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.41e2 / 0.971327718152259207554299130471566540800000000e45 * pow(a, 0.78e2) * pow(x, 0.78e2) - 0.197466373e9 / 0.712800e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.6369883e7 / 0.5400e4 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.1363783e7 / 0.5574019531272192000000e22 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.1517e4 / 0.111603593841165561281642496000000e33 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.41e2 / 0.1867937919523575399142882943214551040000000e43 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.70068713e8 / 0.17280e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.6369883e7 / 0.576e3 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_42_0( const double a, const double x )
{
double retval = 0.3288868749e-1 * a * sqrt(0.43e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.43e2 - 0.1348781387e10 / 0.65501207912448000e17 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.1348781387e10 / 0.3119105138688000e16 * pow(a, 0.40e2) * pow(x, 0.40e2) + 0.65231e5 / 0.1128044346494875729920000000e28 * pow(a, 0.60e2) * pow(x, 0.60e2) - 0.58642669e8 / 0.7426440806400e13 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.65231e5 / 0.132808276670987017925154570240000000e36 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.58642669e8 / 0.469038366720e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.65231e5 / 0.20917303575680455323211844812800000000e38 * pow(a, 0.70e2) * pow(x, 0.70e2) + 0.1763e4 / 0.107574704103499484519375201894400000000e39 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.1763e4 / 0.25208338994920045872373588977254400000000e41 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.16112057e8 / 0.560e3 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.1114210711e10 / 0.651442176000e12 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.65231e5 / 0.8952159933783333792645120000000e31 * pow(a, 0.64e2) * pow(x, 0.64e2) - 0.65231e5 / 0.93251665976909727006720000000e29 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.58642669e8 / 0.59808020217200640000e20 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.16112057e8 / 0.360e3 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.3048227e7 / 0.60e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.160433e6 / 0.4e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.61705e5 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.58642669e8 / 0.2159734063398912000000e22 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.1114210711e10 / 0.55351296000e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.2022161e7 / 0.488819216814446149632000000e27 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.12341e5 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.43e2 / 0.33452526613163807108170062053440751665152000000000e50 * pow(a, 0.82e2) * pow(x, 0.82e2) + 0.58642669e8 / 0.68620313051136000e17 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.903e3 * a * a * x * x - 0.18941582087e11 / 0.93405312000e11 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.2022161e7 / 0.7866056362531317350400000e25 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.18941582087e11 / 0.10897286400e11 * pow(a, 0.28e2) * pow(x, 0.28e2) + pow(a, 0.84e2) * pow(x, 0.84e2) / 0.1405006117752879898543142606244511569936384000000000e52 - 0.58642669e8 / 0.1893920640211353600e19 * pow(a, 0.46e2) * pow(x, 0.46e2) + 0.43e2 / 0.38853108726090368302171965218862661632000000000e47 * pow(a, 0.80e2) * pow(x, 0.80e2) - 0.653158003e9 / 0.51891840e8 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.653158003e9 / 0.8553600e7 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.58642669e8 / 0.4213958765641777152000000e25 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.1763e4 / 0.2913983154456777622662897391414699622400000000e46 * pow(a, 0.78e2) * pow(x, 0.78e2) - 0.273904969e9 / 0.712800e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.273904969e9 / 0.172800e6 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.58642669e8 / 0.89184312500355072000000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.65231e5 / 0.1004432344570490051534782464000000e34 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.1763e4 / 0.7471751678094301596571531772858204160000000e43 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.273904969e9 / 0.51840e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.16112057e8 / 0.1152e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_43_0( const double a, const double x )
{
double retval = 0.6428243464e-1 * a * sqrt(0.11e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.44e2 - 0.1348781387e10 / 0.32750603956224000e17 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.58642669e8 / 0.70888753152000e14 * pow(a, 0.40e2) * pow(x, 0.40e2) + 0.65231e5 / 0.333285829646213283840000000e27 * pow(a, 0.60e2) * pow(x, 0.60e2) - 0.58642669e8 / 0.4050785894400e13 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.65231e5 / 0.27165329319065526393781616640000000e35 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.58642669e8 / 0.266499072000e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.65231e5 / 0.3803146104669173695129426329600000000e37 * pow(a, 0.70e2) * pow(x, 0.70e2) + 0.1763e4 / 0.17114157471011281628082418483200000000e38 * pow(a, 0.72e2) * pow(x, 0.72e2) - pow(a, 0.86e2) * pow(x, 0.86e2) / 0.60415263063373835637355132068513997507264512000000000e53 - 0.1763e4 / 0.3437500772034551709869125769625600000000e40 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.177232627e9 / 0.5040e4 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.1114210711e10 / 0.384943104000e12 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.65231e5 / 0.2238039983445833448161280000000e31 * pow(a, 0.64e2) * pow(x, 0.64e2) - 0.65231e5 / 0.25432272539157198274560000000e29 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.58642669e8 / 0.25826190548336640000e20 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.4790071e7 / 0.90e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.1764763e7 / 0.30e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.135751e6 / 0.3e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.135751e6 / 0.6e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.58642669e8 / 0.883527571390464000000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.1114210711e10 / 0.33965568000e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.2022161e7 / 0.155533387168232865792000000e27 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.6622e4 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.43e2 / 0.1520569391507445777644093729701852348416000000000e49 * pow(a, 0.82e2) * pow(x, 0.82e2) + 0.58642669e8 / 0.32750603956224000e17 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.946e3 * a * a * x * x - 0.18941582087e11 / 0.59439744000e11 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.2022161e7 / 0.2681610123590221824000000e25 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.653158003e9 / 0.247665600e9 * pow(a, 0.28e2) * pow(x, 0.28e2) + pow(a, 0.84e2) * pow(x, 0.84e2) / 0.31931957221656361330525968323738899316736000000000e50 - 0.58642669e8 / 0.860873018277888000e18 * pow(a, 0.46e2) * pow(x, 0.46e2) + 0.43e2 / 0.2649075594960706929693543083104272384000000000e46 * pow(a, 0.80e2) * pow(x, 0.80e2) - 0.653158003e9 / 0.35380800e8 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.21069613e8 / 0.194400e6 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.58642669e8 / 0.1532348642051555328000000e25 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.1763e4 / 0.264907559496070692969354308310427238400000000e45 * pow(a, 0.78e2) * pow(x, 0.78e2) - 0.273904969e9 / 0.518400e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.273904969e9 / 0.129600e6 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.58642669e8 / 0.34457575284228096000000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.65231e5 / 0.228280078311475011712450560000000e33 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.1763e4 / 0.849062690692534272337674065097523200000000e42 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.177232627e9 / 0.25920e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.177232627e9 / 0.10080e5 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_44_0( const double a, const double x )
{
double retval = 0.9428090413e-1 * a * sqrt(0.5e1) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.45e2 - 0.58642669e8 / 0.727791199027200e15 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.58642669e8 / 0.37807335014400e14 * pow(a, 0.40e2) * pow(x, 0.40e2) + 0.65231e5 / 0.103688924778821910528000000e27 * pow(a, 0.60e2) * pow(x, 0.60e2) - 0.58642669e8 / 0.2250436608000e13 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.65231e5 / 0.6036739848681228087507025920000000e34 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.58642669e8 / 0.153977241600e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.65231e5 / 0.760629220933834739025885265920000000e36 * pow(a, 0.70e2) * pow(x, 0.70e2) + pow(a, 0.88e2) * pow(x, 0.88e2) / 0.2658271574788448768043625811014615890319638528000000000e55 + 0.1763e4 / 0.3042516883735338956103541063680000000e37 * pow(a, 0.72e2) * pow(x, 0.72e2) - pow(a, 0.86e2) * pow(x, 0.86e2) / 0.1342561401408307458607891823744755500161433600000000e52 - 0.1763e4 / 0.534722342316485821535197341941760000000e39 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.4790071e7 / 0.112e3 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.1114210711e10 / 0.230965862400e12 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.65231e5 / 0.596810662252222252843008000000e30 * pow(a, 0.64e2) * pow(x, 0.64e2) - 0.65231e5 / 0.7347100955756523945984000000e28 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.58642669e8 / 0.11478306910371840000e20 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.252109e6 / 0.4e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.135751e6 / 0.2e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.407253e6 / 0.8e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.49665e5 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.58642669e8 / 0.373044974587084800000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.1114210711e10 / 0.21134131200e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.2022161e7 / 0.51844462389410955264000000e26 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.7095e4 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.43e2 / 0.101371292767163051842939581980123489894400000000e48 * pow(a, 0.82e2) * pow(x, 0.82e2) + 0.58642669e8 / 0.16011406378598400e17 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.990e3 * a * a * x * x - 0.653158003e9 / 0.1320883200e10 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.2022161e7 / 0.953461377276523315200000e24 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.653158003e9 / 0.165110400e9 * pow(a, 0.28e2) * pow(x, 0.28e2) + pow(a, 0.84e2) * pow(x, 0.84e2) / 0.1419198098740282725801154147721728858521600000000e49 - 0.58642669e8 / 0.401740741863014400e18 * pow(a, 0.46e2) * pow(x, 0.46e2) + 0.43e2 / 0.235473386218729504861648274053713100800000000e45 * pow(a, 0.80e2) * pow(x, 0.80e2) - 0.21069613e8 / 0.786240e6 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.21069613e8 / 0.138240e6 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.58642669e8 / 0.578887264775032012800000e24 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.1763e4 / 0.29434173277341188107706034256714137600000000e44 * pow(a, 0.78e2) * pow(x, 0.78e2) - 0.273904969e9 / 0.380160e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.16112057e8 / 0.5760e4 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.58642669e8 / 0.13783030113691238400000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.65231e5 / 0.55801796920582780640821248000000e32 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.1763e4 / 0.113208358759004569645023208679669760000000e42 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.177232627e9 / 0.20160e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.177232627e9 / 0.8064e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_45_0( const double a, const double x )
{
double retval = 0.3074377309e-1 * a * sqrt(0.46e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.46e2 - 0.1348781387e10 / 0.8733494388326400e16 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.1348781387e10 / 0.472591687680000e15 * pow(a, 0.40e2) * pow(x, 0.40e2) + 0.65231e5 / 0.33811605906137579520000000e26 * pow(a, 0.60e2) * pow(x, 0.60e2) - 0.1348781387e10 / 0.29255675904000e14 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.65231e5 / 0.1443568224684641499186462720000000e34 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.1348781387e10 / 0.2078692761600e13 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.65231e5 / 0.165354178463877117179540275200000000e36 * pow(a, 0.70e2) * pow(x, 0.70e2) + pow(a, 0.88e2) * pow(x, 0.88e2) / 0.57788512495401060174861430674230780224339968000000000e53 + 0.1763e4 / 0.595275042469957621846344990720000000e36 * pow(a, 0.72e2) * pow(x, 0.72e2) - pow(a, 0.86e2) * pow(x, 0.86e2) / 0.58372234843839454722082253206293717398323200000000e50 - pow(a, 0.90e2) * pow(x, 0.90e2) / 0.119622220865480194561963161495657715064383733760000000000e57 - 0.1763e4 / 0.92995189968084490701773450772480000000e38 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.5798507e7 / 0.112e3 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.25626846353e11 / 0.3233522073600e13 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.65231e5 / 0.168663882810410636673024000000e30 * pow(a, 0.64e2) * pow(x, 0.64e2) - 0.65231e5 / 0.2236074203925898592256000000e28 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.58642669e8 / 0.5240096632995840000e19 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.446039e6 / 0.6e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.3122273e7 / 0.40e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.228459e6 / 0.4e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.54395e5 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.58642669e8 / 0.162193467211776000000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.883684357e9 / 0.10567065600e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.2022161e7 / 0.18032856483273375744000000e26 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.7590e4 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.43e2 / 0.8814895023231569725473007128706390425600000000e46 * pow(a, 0.82e2) * pow(x, 0.82e2) + 0.58642669e8 / 0.8005703189299200e16 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.1035e4 * a * a * x * x - 0.15022634069e11 / 0.19813248000e11 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.2022161e7 / 0.352366161167410790400000e24 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.484601099e9 / 0.82555200e8 * pow(a, 0.28e2) * pow(x, 0.28e2) + pow(a, 0.84e2) * pow(x, 0.84e2) / 0.92556397743931482117466574851417099468800000000e47 - 0.58642669e8 / 0.192136876543180800e18 * pow(a, 0.46e2) * pow(x, 0.46e2) + 0.43e2 / 0.25594933284644511398005247179751424000000000e44 * pow(a, 0.80e2) * pow(x, 0.80e2) - 0.484601099e9 / 0.12579840e8 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.484601099e9 / 0.2280960e7 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.58642669e8 / 0.226521103607621222400000e24 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.1763e4 / 0.3839239992696676709700787076962713600000000e43 * pow(a, 0.78e2) * pow(x, 0.78e2) - 0.370577311e9 / 0.380160e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.370577311e9 / 0.100800e6 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.58642669e8 / 0.5692990699133337600000e22 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.65231e5 / 0.14556990501021594949779456000000e32 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.1763e4 / 0.17227358941587651902503531755601920000000e41 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.4076350421e10 / 0.362880e6 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.110171633e9 / 0.4032e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_46_0( const double a, const double x )
{
double retval = 0.3008965026e-1 * a * sqrt(0.47e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.47e2 - 0.63392725189e11 / 0.218337359708160000e18 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.63392725189e11 / 0.12287383879680000e17 * pow(a, 0.40e2) * pow(x, 0.40e2) + 0.3065857e7 / 0.540985694498201272320000000e27 * pow(a, 0.60e2) * pow(x, 0.60e2) - 0.63392725189e11 / 0.789903249408000e15 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.3065857e7 / 0.17322818696215697990237552640000000e35 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.63392725189e11 / 0.58203397324800e14 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.3065857e7 / 0.1818895963102648288974943027200000000e37 * pow(a, 0.70e2) * pow(x, 0.70e2) + 0.47e2 / 0.115577024990802120349722861348461560448679936000000000e54 * pow(a, 0.88e2) * pow(x, 0.88e2) + pow(a, 0.92e2) * pow(x, 0.92e2) / 0.5502622159812088949850305428800254892961651752960000000000e58 + 0.82861e5 / 0.5952750424699576218463449907200000000e37 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.47e2 / 0.175116704531518364166246759618881152194969600000000e51 * pow(a, 0.86e2) * pow(x, 0.86e2) - 0.47e2 / 0.119622220865480194561963161495657715064383733760000000000e57 * pow(a, 0.90e2) * pow(x, 0.90e2) - 0.82861e5 / 0.836956709712760416315961056952320000000e39 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.20963833e8 / 0.336e3 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.41533164779e11 / 0.3233522073600e13 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.3065857e7 / 0.2361294359345748913422336000000e31 * pow(a, 0.64e2) * pow(x, 0.64e2) - 0.3065857e7 / 0.33541113058888478883840000000e29 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.2756205443e10 / 0.115282125925908480000e21 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.20963833e8 / 0.240e3 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.3579191e7 / 0.40e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.511313e6 / 0.8e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.59455e5 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.2756205443e10 / 0.3406062811447296000000e22 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.41533164779e11 / 0.317011968000e12 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.95041567e8 / 0.306558560215647387648000000e27 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.16215e5 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.2021e4 / 0.44074475116157848627365035643531952128000000000e47 * pow(a, 0.82e2) * pow(x, 0.82e2) + 0.2756205443e10 / 0.192136876543180800e18 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.1081e4 * a * a * x * x - 0.22776251653e11 / 0.19813248000e11 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.95041567e8 / 0.6342590901013394227200000e25 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.22776251653e11 / 0.2641766400e10 * pow(a, 0.28e2) * pow(x, 0.28e2) + 0.47e2 / 0.370225590975725928469866299405668397875200000000e48 * pow(a, 0.84e2) * pow(x, 0.84e2) - 0.2756205443e10 / 0.4419148160493158400e19 * pow(a, 0.46e2) * pow(x, 0.46e2) + 0.2021e4 / 0.153569599707867068388031483078508544000000000e45 * pow(a, 0.80e2) * pow(x, 0.80e2) - 0.22776251653e11 / 0.415134720e9 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.1339779509e10 / 0.4561920e7 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.2756205443e10 / 0.4303900968544803225600000e25 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.82861e5 / 0.26874679948876736967905509538738995200000000e44 * pow(a, 0.78e2) * pow(x, 0.78e2) - 0.17417133617e11 / 0.13305600e8 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.17417133617e11 / 0.3628800e7 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.2756205443e10 / 0.113859813982666752000000e24 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.3065857e7 / 0.189240876513280734347132928000000e33 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.82861e5 / 0.137818871532701215220028254044815360000000e42 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.5178066751e10 / 0.362880e6 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.272529829e9 / 0.8064e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_47_0( const double a, const double x )
{
double retval = 0.1178511302e0 * a * sqrt(0.3e1) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.48e2 - 0.63392725189e11 / 0.118266069841920000e18 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.63392725189e11 / 0.6911653432320000e16 * pow(a, 0.40e2) * pow(x, 0.40e2) - pow(a, 0.94e2) * pow(x, 0.94e2) / 0.258623241511168180642964355153611979969197632389120000000000e60 + 0.3065857e7 / 0.191599100134779617280000000e27 * pow(a, 0.60e2) * pow(x, 0.60e2) - 0.63392725189e11 / 0.460776895488000e15 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.3065857e7 / 0.4691596730225084872356003840000000e34 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.2185956041e10 / 0.1212570777600e13 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.3065857e7 / 0.454723990775662072243735756800000000e36 * pow(a, 0.70e2) * pow(x, 0.70e2) + 0.47e2 / 0.7223564061925132521857678834278847528042496000000000e52 * pow(a, 0.88e2) * pow(x, 0.88e2) + pow(a, 0.92e2) * pow(x, 0.92e2) / 0.114637961662751853121881363100005310270034411520000000000e57 + 0.82861e5 / 0.1364171972326986216731207270400000000e37 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.47e2 / 0.14593058710959863680520563301573429349580800000000e50 * pow(a, 0.86e2) * pow(x, 0.86e2) - 0.47e2 / 0.4984259202728341440081798395652404794349322240000000000e55 * pow(a, 0.90e2) * pow(x, 0.90e2) - 0.82861e5 / 0.174365981190158420065825220198400000000e39 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.20963833e8 / 0.280e3 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.41533164779e11 / 0.2020951296000e13 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.3065857e7 / 0.737904487295546535444480000000e30 * pow(a, 0.64e2) * pow(x, 0.64e2) - 0.3065857e7 / 0.11180371019629492961280000000e29 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.2756205443e10 / 0.55239352006164480000e20 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.511313e6 / 0.5e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.511313e6 / 0.5e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.71346e5 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.32430e5 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.2756205443e10 / 0.1561112121913344000000e22 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.1339779509e10 / 0.6604416000e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.95041567e8 / 0.114959460080867770368000000e27 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.8648e4 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.2021e4 / 0.5509309389519731078420629455441494016000000000e46 * pow(a, 0.82e2) * pow(x, 0.82e2) + 0.2756205443e10 / 0.100071289866240000e18 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.1128e4 * a * a * x * x - 0.22776251653e11 / 0.13208832000e11 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.95041567e8 / 0.2510608898317801881600000e25 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.22776251653e11 / 0.1816214400e10 * pow(a, 0.28e2) * pow(x, 0.28e2) + 0.47e2 / 0.38565165726638117548944406188090458112000000000e47 * pow(a, 0.84e2) * pow(x, 0.84e2) - 0.2756205443e10 / 0.2209574080246579200e19 * pow(a, 0.46e2) * pow(x, 0.46e2) + 0.2021e4 / 0.22395566624063947473254591282282496000000000e44 * pow(a, 0.80e2) * pow(x, 0.80e2) - 0.1339779509e10 / 0.17297280e8 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.1339779509e10 / 0.3326400e7 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.2756205443e10 / 0.1793292070227001344000000e25 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.82861e5 / 0.4479113324812789494650918256456499200000000e43 * pow(a, 0.78e2) * pow(x, 0.78e2) - 0.17417133617e11 / 0.9979200e7 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.470733341e9 / 0.75600e5 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.2756205443e10 / 0.49813668617416704000000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.3065857e7 / 0.55195255649706880851247104000000e32 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.82861e5 / 0.25841038412381477853755297633402880000000e41 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.272529829e9 / 0.15120e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.20963833e8 / 0.504e3 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_48_0( const double a, const double x )
{
double retval = 0.2020305089e0 * a * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.49e2 - 0.63392725189e11 / 0.65167018076160000e17 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.63392725189e11 / 0.3949516247040000e16 * pow(a, 0.40e2) * pow(x, 0.40e2) - pow(a, 0.94e2) * pow(x, 0.94e2) / 0.5278025336962615931489068472522693468759135354880000000000e58 + 0.3065857e7 / 0.70383342906653736960000000e26 * pow(a, 0.60e2) * pow(x, 0.60e2) - 0.2185956041e10 / 0.9403610112000e13 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.3065857e7 / 0.1340456208635738534958858240000000e34 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.2185956041e10 / 0.742390272000e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.3065857e7 / 0.120641058777216468146297241600000000e36 * pow(a, 0.70e2) * pow(x, 0.70e2) + 0.47e2 / 0.589678698932663879335320721165620206370816000000000e51 * pow(a, 0.88e2) * pow(x, 0.88e2) + pow(a, 0.92e2) * pow(x, 0.92e2) / 0.4679100476030687882525769922449196337552424960000000000e55 + 0.82861e5 / 0.334082931998445604097438515200000000e36 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.47e2 / 0.1489087623567333028624547275670758096896000000000e49 * pow(a, 0.86e2) * pow(x, 0.86e2) - 0.47e2 / 0.305158726697653557556028473203208456796897280000000000e54 * pow(a, 0.90e2) * pow(x, 0.90e2) - 0.82861e5 / 0.39143383532484543280083212697600000000e38 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.3579191e7 / 0.40e2 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.1339779509e10 / 0.41243904000e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.3065857e7 / 0.240948404014872338104320000000e30 * pow(a, 0.64e2) * pow(x, 0.64e2) - 0.3065857e7 / 0.3878904231300028170240000000e28 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.2756205443e10 / 0.27056009145876480000e20 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.3579191e7 / 0.30e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.582659e6 / 0.5e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.158907e6 / 0.2e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.105938e6 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.2756205443e10 / 0.732766914367488000000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.1339779509e10 / 0.4313088000e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.95041567e8 / 0.44576117174214033408000000e26 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.9212e4 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.2021e4 / 0.787044198502818725488661350777356288000000000e45 * pow(a, 0.82e2) * pow(x, 0.82e2) + 0.2756205443e10 / 0.53099051765760000e17 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.1176e4 * a * a * x * x - 0.22776251653e11 / 0.8895744000e10 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.95041567e8 / 0.1024738325844000768000000e25 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.1339779509e10 / 0.74131200e8 * pow(a, 0.28e2) * pow(x, 0.28e2) + 0.47e2 / 0.4722265191016912352931968104664137728000000000e46 * pow(a, 0.84e2) * pow(x, 0.84e2) - 0.2756205443e10 / 0.1127333714411520000e19 * pow(a, 0.46e2) * pow(x, 0.46e2) + 0.2021e4 / 0.3656419040663501628286463882821632000000000e43 * pow(a, 0.80e2) * pow(x, 0.80e2) - 0.1339779509e10 / 0.12355200e8 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.9378456563e10 / 0.17107200e8 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.2756205443e10 / 0.768553744383000576000000e24 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.82861e5 / 0.822694284149287866364454373634867200000000e42 * pow(a, 0.78e2) * pow(x, 0.78e2) - 0.3295133387e10 / 0.1425600e7 * pow(a, 0.22e2) * pow(x, 0.22e2) + pow(a, 0.96e2) * pow(x, 0.96e2) / 0.12413915592536072670862289047373375038521486354677760000000000e62 + 0.173428073e9 / 0.21600e5 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.2756205443e10 / 0.22365320603738112000000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.3065857e7 / 0.16896506831542922709565440000000e32 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.82861e5 / 0.5273681308649281194643938292531200000000e40 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.146746831e9 / 0.6480e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.146746831e9 / 0.2880e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_49_0( const double a, const double x )
{
double retval = 0.1414213562e0 * a * sqrt(0.2e1) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.50e2 - 0.63392725189e11 / 0.36493530122649600e17 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.2185956041e10 / 0.78990324940800e14 * pow(a, 0.40e2) * pow(x, 0.40e2) - pow(a, 0.94e2) * pow(x, 0.94e2) / 0.211121013478504637259562738900907738750365414195200000000e57 + 0.3065857e7 / 0.26745670304528420044800000e26 * pow(a, 0.60e2) * pow(x, 0.60e2) - 0.2185956041e10 / 0.5642166067200e13 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.3065857e7 / 0.402136862590721560487657472000000e33 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.70514711e8 / 0.14847805440e11 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.3065857e7 / 0.33779496457620611080963227648000000e35 * pow(a, 0.70e2) * pow(x, 0.70e2) + 0.47e2 / 0.58967869893266387933532072116562020637081600000000e50 * pow(a, 0.88e2) * pow(x, 0.88e2) + pow(a, 0.92e2) * pow(x, 0.92e2) / 0.280746028561841272951546195346951780253145497600000000e54 + 0.82861e5 / 0.86861562319595857065334013952000000e35 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.47e2 / 0.178690514828079963434945673080490971627520000000e48 * pow(a, 0.86e2) * pow(x, 0.86e2) - 0.47e2 / 0.24412698135812284604482277856256676543751782400000000e53 * pow(a, 0.90e2) * pow(x, 0.90e2) - 0.82861e5 / 0.9394412047796290387219971047424000000e37 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.2556565e7 / 0.24e2 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.1339779509e10 / 0.26396098560e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.3065857e7 / 0.81922457365056594955468800000e29 * pow(a, 0.64e2) * pow(x, 0.64e2) - 0.3065857e7 / 0.1396405523268010141286400000e28 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.2756205443e10 / 0.13528004572938240000e20 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.416185e6 / 0.3e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.264845e6 / 0.2e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.264845e6 / 0.3e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.115150e6 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.2756205443e10 / 0.351728118896394240000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.1339779509e10 / 0.2846638080e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.95041567e8 / 0.17830446869685613363200000e26 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.9800e4 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.2021e4 / 0.125927071760450996078185816124377006080000000e45 * pow(a, 0.82e2) * pow(x, 0.82e2) + 0.2756205443e10 / 0.28673487953510400e17 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.1225e4 * a * a * x * x - 0.1339779509e10 / 0.355829760e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.95041567e8 / 0.430390096854480322560000e24 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.1339779509e10 / 0.51891840e8 * pow(a, 0.28e2) * pow(x, 0.28e2) + 0.47e2 / 0.661117126742367729410475534652979281920000000e45 * pow(a, 0.84e2) * pow(x, 0.84e2) - 0.2756205443e10 / 0.586213531493990400e18 * pow(a, 0.46e2) * pow(x, 0.46e2) + 0.2021e4 / 0.658155427319430293091563498907893760000000e42 * pow(a, 0.80e2) * pow(x, 0.80e2) - 0.1339779509e10 / 0.8895744e7 * pow(a, 0.26e2) * pow(x, 0.26e2) - pow(a, 0.98e2) * pow(x, 0.98e2) / 0.608281864034267560872252163321295376887552831379210240000000000e63 + 0.253471799e9 / 0.342144e6 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.2756205443e10 / 0.338163647528520253440000e24 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.82861e5 / 0.164538856829857573272890874726973440000000e42 * pow(a, 0.78e2) * pow(x, 0.78e2) - 0.173428073e9 / 0.57024e5 * pow(a, 0.22e2) * pow(x, 0.22e2) + pow(a, 0.96e2) * pow(x, 0.96e2) / 0.248278311850721453417245780947467500770429727093555200000000e60 + 0.13340621e8 / 0.1296e4 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.2756205443e10 / 0.10288047477719531520000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.3065857e7 / 0.5406882186093735267060940800000e31 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.82861e5 / 0.1160209887902841862821666424356864000000e40 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.146746831e9 / 0.5184e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.17895955e8 / 0.288e3 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_50_0( const double a, const double x )
{
double retval = 0.2772967769e-1 * a * sqrt(0.51e2) * exp(-a * a * x * x / 0.2e1) * sqrt(a * a * x * x) * (0.51e2 - 0.2185956041e10 / 0.715559414169600e15 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.2185956041e10 / 0.46464897024000e14 * pow(a, 0.40e2) * pow(x, 0.40e2) - pow(a, 0.94e2) * pow(x, 0.94e2) / 0.12418883145794390427033102288288690514727377305600000000e56 + 0.3065857e7 / 0.10488498158638596096000000e26 * pow(a, 0.60e2) * pow(x, 0.60e2) - 0.70514711e8 / 0.110630707200e12 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.3065857e7 / 0.126160584342187156231421952000000e33 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.70514711e8 / 0.9316270080e10 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.3065857e7 / 0.9935146016947238553224478720000000e34 * pow(a, 0.70e2) * pow(x, 0.70e2) + 0.47e2 / 0.6937396458031339756886126131360237722009600000000e49 * pow(a, 0.88e2) * pow(x, 0.88e2) + pow(a, 0.92e2) * pow(x, 0.92e2) / 0.22019296357791472388356564340937394529658470400000000e53 + 0.82861e5 / 0.23844350440673372527738748928000000e35 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.47e2 / 0.24526149094050191059698425716930133360640000000e47 * pow(a, 0.86e2) * pow(x, 0.86e2) - 0.47e2 / 0.2393401778020812216125713515319282014093312000000000e52 * pow(a, 0.90e2) * pow(x, 0.90e2) - 0.82861e5 / 0.2394654051399054412428620070912000000e37 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.1010735e7 / 0.8e1 * pow(a, 0.14e2) * pow(x, 0.14e2) - 0.1339779509e10 / 0.17079828480e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.3065857e7 / 0.28913808481784680572518400000e29 * pow(a, 0.64e2) * pow(x, 0.64e2) - 0.3065857e7 / 0.520229508668474366361600000e27 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.2756205443e10 / 0.6896629782282240000e19 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.643195e6 / 0.4e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.900473e6 / 0.6e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.195755e6 / 0.2e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.41650e5 * pow(a, 0.6e1) * pow(x, 0.6e1) - 0.2756205443e10 / 0.172415744557056000000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) + 0.1339779509e10 / 0.1897758720e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.95041567e8 / 0.7341948711047017267200000e25 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.20825e5 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.2021e4 / 0.22222424428314881660856320492537118720000000e44 * pow(a, 0.82e2) * pow(x, 0.82e2) + pow(a, 0.100e3) * pow(x, 0.100e3) / 0.30414093201713378043612608166064768844377641568960512000000000000e65 + 0.2756205443e10 / 0.15742307111731200e17 * pow(a, 0.44e2) * pow(x, 0.44e2) - 0.1275e4 * a * a * x * x - 0.22776251653e11 / 0.4151347200e10 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.95041567e8 / 0.185658473152913080320000e24 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.22776251653e11 / 0.622702080e9 * pow(a, 0.28e2) * pow(x, 0.28e2) + 0.47e2 / 0.103704647332136114417329495631839887360000000e45 * pow(a, 0.84e2) * pow(x, 0.84e2) - 0.2756205443e10 / 0.310348340202700800e18 * pow(a, 0.46e2) * pow(x, 0.46e2) + 0.2021e4 / 0.129050083788123586880698725276057600000000e42 * pow(a, 0.80e2) * pow(x, 0.80e2) - 0.615574369e9 / 0.2965248e7 * pow(a, 0.26e2) * pow(x, 0.26e2) - pow(a, 0.98e2) * pow(x, 0.98e2) / 0.11927095373220932566122591437672458370344173164298240000000000e62 + 0.226790557e9 / 0.228096e6 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.2756205443e10 / 0.152505174375607173120000e24 * pow(a, 0.54e2) * pow(x, 0.54e2) - 0.82861e5 / 0.35488773041733986392192149450915840000000e41 * pow(a, 0.78e2) * pow(x, 0.78e2) - 0.226790557e9 / 0.57024e5 * pow(a, 0.22e2) * pow(x, 0.22e2) + pow(a, 0.96e2) * pow(x, 0.96e2) / 0.9736404386302802094793952194018333363546263807590400000000e58 + 0.226790557e9 / 0.17280e5 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.2756205443e10 / 0.4841434107162132480000e22 * pow(a, 0.52e2) * pow(x, 0.52e2) - 0.3065857e7 / 0.1802294062031245089020313600000e31 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.82861e5 / 0.272990561859492203016862688083968000000e39 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.60846247e8 / 0.1728e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.43461605e8 / 0.576e3 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_0_1( const double a, const double x )
{
double retval = 0.7071067810e0 * pow(a, 0.3e1) * sqrt(0.2e1) * exp(-a * a * x * x / 0.2e1) * x * x;
return retval;
}

double PHO_1_1( const double a, const double x )
{
double retval = 0.2357022603e0 * pow(a, 0.3e1) * sqrt(0.6e1) * exp(-a * a * x * x / 0.2e1) * x * x * (-a * a * x * x + 0.3e1);
return retval;
}

double PHO_2_1( const double a, const double x )
{
double retval = 0.2357022603e0 * pow(a, 0.3e1) * sqrt(0.3e1) * exp(-a * a * x * x / 0.2e1) * x * x * (0.6e1 - 0.4e1 * a * a * x * x + pow(a, 0.4e1) * pow(x, 0.4e1) / 0.2e1);
return retval;
}

double PHO_3_1( const double a, const double x )
{
double retval = 0.1414213562e0 * pow(a, 0.3e1) * sqrt(0.5e1) * exp(-a * a * x * x / 0.2e1) * x * x * (0.10e2 - 0.10e2 * a * a * x * x + 0.5e1 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - pow(a, 0.6e1) * pow(x, 0.6e1) / 0.6e1);
return retval;
}

double PHO_4_1( const double a, const double x )
{
double retval = 0.4714045207e-1 * pow(a, 0.3e1) * sqrt(0.30e2) * exp(-a * a * x * x / 0.2e1) * x * x * (0.15e2 - 0.20e2 * a * a * x * x + 0.15e2 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - pow(a, 0.6e1) * pow(x, 0.6e1) + pow(a, 0.8e1) * pow(x, 0.8e1) / 0.24e2);
return retval;
}

double PHO_5_1( const double a, const double x )
{
double retval = 0.3367175148e-1 * pow(a, 0.3e1) * sqrt(0.42e2) * exp(-a * a * x * x / 0.2e1) * x * x * (0.21e2 - 0.35e2 * a * a * x * x + 0.35e2 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.7e1 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.7e1 / 0.24e2 * pow(a, 0.8e1) * pow(x, 0.8e1) - pow(a, 0.10e2) * pow(x, 0.10e2) / 0.120e3);
return retval;
}

double PHO_6_1( const double a, const double x )
{
double retval = 0.5050762721e-1 * pow(a, 0.3e1) * sqrt(0.14e2) * exp(-a * a * x * x / 0.2e1) * x * x * (0.28e2 - 0.56e2 * a * a * x * x + 0.35e2 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.28e2 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.7e1 / 0.6e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - pow(a, 0.10e2) * pow(x, 0.10e2) / 0.15e2 + pow(a, 0.12e2) * pow(x, 0.12e2) / 0.720e3);
return retval;
}

double PHO_7_1( const double a, const double x )
{
double retval = 0.1178511302e0 * pow(a, 0.3e1) * sqrt(0.2e1) * exp(-a * a * x * x / 0.2e1) * x * x * (0.36e2 - 0.84e2 * a * a * x * x + 0.63e2 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.21e2 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.7e1 / 0.2e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.3e1 / 0.10e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + pow(a, 0.12e2) * pow(x, 0.12e2) / 0.80e2 - pow(a, 0.14e2) * pow(x, 0.14e2) / 0.5040e4);
return retval;
}

double PHO_8_1( const double a, const double x )
{
double retval = 0.4714045207e-1 * pow(a, 0.3e1) * sqrt(0.10e2) * exp(-a * a * x * x / 0.2e1) * x * x * (0.45e2 - 0.120e3 * a * a * x * x + 0.105e3 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.42e2 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.35e2 / 0.4e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - pow(a, 0.10e2) * pow(x, 0.10e2) + pow(a, 0.12e2) * pow(x, 0.12e2) / 0.16e2 - pow(a, 0.14e2) * pow(x, 0.14e2) / 0.504e3 + pow(a, 0.16e2) * pow(x, 0.16e2) / 0.40320e5);
return retval;
}

double PHO_9_1( const double a, const double x )
{
double retval = 0.1285648693e-1 * pow(a, 0.3e1) * sqrt(0.110e3) * exp(-a * a * x * x / 0.2e1) * x * x * (0.55e2 - 0.165e3 * a * a * x * x + 0.165e3 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.77e2 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.77e2 / 0.4e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.11e2 / 0.4e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.11e2 / 0.48e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.11e2 / 0.1008e4 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.11e2 / 0.40320e5 * pow(a, 0.16e2) * pow(x, 0.16e2) - pow(a, 0.18e2) * pow(x, 0.18e2) / 0.362880e6);
return retval;
}

double PHO_10_1( const double a, const double x )
{
double retval = 0.2142747821e-1 * pow(a, 0.3e1) * sqrt(0.33e2) * exp(-a * a * x * x / 0.2e1) * x * x * (0.66e2 - 0.220e3 * a * a * x * x + 0.495e3 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.132e3 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.77e2 / 0.2e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.33e2 / 0.5e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.11e2 / 0.16e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.11e2 / 0.252e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.11e2 / 0.6720e4 * pow(a, 0.16e2) * pow(x, 0.16e2) - pow(a, 0.18e2) * pow(x, 0.18e2) / 0.30240e5 + pow(a, 0.20e2) * pow(x, 0.20e2) / 0.3628800e7);
return retval;
}

double PHO_11_1( const double a, const double x )
{
double retval = 0.1813094310e-1 * pow(a, 0.3e1) * sqrt(0.39e2) * exp(-a * a * x * x / 0.2e1) * x * x * (0.78e2 - 0.286e3 * a * a * x * x + 0.715e3 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.429e3 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.143e3 / 0.2e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.143e3 / 0.10e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.143e3 / 0.80e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.143e3 / 0.1008e4 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.143e3 / 0.20160e5 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.13e2 / 0.60480e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.13e2 / 0.3628800e7 * pow(a, 0.20e2) * pow(x, 0.20e2) - pow(a, 0.22e2) * pow(x, 0.22e2) / 0.39916800e8);
return retval;
}

double PHO_12_1( const double a, const double x )
{
double retval = 0.7770404187e-2 * pow(a, 0.3e1) * sqrt(0.182e3) * exp(-a * a * x * x / 0.2e1) * x * x * (0.91e2 - 0.364e3 * a * a * x * x + 0.1001e4 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.1001e4 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.1001e4 / 0.8e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.143e3 / 0.5e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.1001e4 / 0.240e3 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.143e3 / 0.360e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.143e3 / 0.5760e4 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.13e2 / 0.12960e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.13e2 / 0.518400e6 * pow(a, 0.20e2) * pow(x, 0.20e2) - pow(a, 0.22e2) * pow(x, 0.22e2) / 0.2851200e7 + pow(a, 0.24e2) * pow(x, 0.24e2) / 0.479001600e9);
return retval;
}

double PHO_13_1( const double a, const double x )
{
double retval = 0.6734350295e-2 * pow(a, 0.3e1) * sqrt(0.210e3) * exp(-a * a * x * x / 0.2e1) * x * x * (0.105e3 - 0.455e3 * a * a * x * x + 0.1365e4 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.1001e4 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.5005e4 / 0.24e2 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.429e3 / 0.8e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.143e3 / 0.16e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.143e3 / 0.144e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.143e3 / 0.1920e4 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.13e2 / 0.3456e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.13e2 / 0.103680e6 * pow(a, 0.20e2) * pow(x, 0.20e2) - pow(a, 0.22e2) * pow(x, 0.22e2) / 0.380160e6 + pow(a, 0.24e2) * pow(x, 0.24e2) / 0.31933440e8 - pow(a, 0.26e2) * pow(x, 0.26e2) / 0.6227020800e10);
return retval;
}

double PHO_14_1( const double a, const double x )
{
double retval = 0.2357022603e-1 * pow(a, 0.3e1) * sqrt(0.15e2) * exp(-a * a * x * x / 0.2e1) * x * x * (0.120e3 - 0.560e3 * a * a * x * x + 0.910e3 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.728e3 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.1001e4 / 0.3e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.286e3 / 0.3e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.143e3 / 0.8e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.143e3 / 0.63e2 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.143e3 / 0.720e3 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.13e2 / 0.1080e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.13e2 / 0.25920e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - pow(a, 0.22e2) * pow(x, 0.22e2) / 0.71280e5 + pow(a, 0.24e2) * pow(x, 0.24e2) / 0.3991680e7 - pow(a, 0.26e2) * pow(x, 0.26e2) / 0.389188800e9 + pow(a, 0.28e2) * pow(x, 0.28e2) / 0.87178291200e11);
return retval;
}

double PHO_15_1( const double a, const double x )
{
double retval = 0.2079725826e-1 * pow(a, 0.3e1) * sqrt(0.17e2) * exp(-a * a * x * x / 0.2e1) * x * x * (0.136e3 - 0.680e3 * a * a * x * x + 0.1190e4 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.3094e4 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.1547e4 / 0.3e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.2431e4 / 0.15e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.2431e4 / 0.72e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.2431e4 / 0.504e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.2431e4 / 0.5040e4 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.221e3 / 0.6480e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.221e3 / 0.129600e6 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.17e2 / 0.285120e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.17e2 / 0.11975040e8 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.17e2 / 0.778377600e9 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.17e2 / 0.87178291200e11 * pow(a, 0.28e2) * pow(x, 0.28e2) - pow(a, 0.30e2) * pow(x, 0.30e2) / 0.1307674368000e13);
return retval;
}

double PHO_16_1( const double a, const double x )
{
double retval = 0.1386483884e-1 * pow(a, 0.3e1) * sqrt(0.34e2) * exp(-a * a * x * x / 0.2e1) * x * x * (0.153e3 - 0.816e3 * a * a * x * x + 0.1530e4 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.1428e4 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.1547e4 / 0.2e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.1326e4 / 0.5e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.2431e4 / 0.40e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.2431e4 / 0.252e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.2431e4 / 0.2240e4 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.221e3 / 0.2520e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.221e3 / 0.43200e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.17e2 / 0.79200e5 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.17e2 / 0.2661120e7 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.17e2 / 0.129729600e9 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.17e2 / 0.9686476800e10 * pow(a, 0.28e2) * pow(x, 0.28e2) - pow(a, 0.30e2) * pow(x, 0.30e2) / 0.72648576000e11 + pow(a, 0.32e2) * pow(x, 0.32e2) / 0.20922789888000e14);
return retval;
}

double PHO_17_1( const double a, const double x )
{
double retval = 0.1240538212e-1 * pow(a, 0.3e1) * sqrt(0.38e2) * exp(-a * a * x * x / 0.2e1) * x * x * (0.171e3 - 0.969e3 * a * a * x * x + 0.1938e4 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.1938e4 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.2261e4 / 0.2e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.4199e4 / 0.10e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.4199e4 / 0.40e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.46189e5 / 0.2520e4 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.46189e5 / 0.20160e5 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.4199e4 / 0.20160e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.4199e4 / 0.302400e6 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.323e3 / 0.475200e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.323e3 / 0.13305600e8 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.323e3 / 0.518918400e9 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.323e3 / 0.29059430400e11 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.19e2 / 0.145297152000e12 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.19e2 / 0.20922789888000e14 * pow(a, 0.32e2) * pow(x, 0.32e2) - pow(a, 0.34e2) * pow(x, 0.34e2) / 0.355687428096000e15);
return retval;
}

double PHO_18_1( const double a, const double x )
{
double retval = 0.7443229274e-2 * pow(a, 0.3e1) * sqrt(0.95e2) * exp(-a * a * x * x / 0.2e1) * x * x * (0.190e3 - 0.1140e4 * a * a * x * x + 0.4845e4 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.2584e4 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.1615e4 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.646e3 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.4199e4 / 0.24e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.4199e4 / 0.126e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.46189e5 / 0.10080e5 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.4199e4 / 0.9072e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.4199e4 / 0.120960e6 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.323e3 / 0.166320e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.323e3 / 0.3991680e7 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.323e3 / 0.129729600e9 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.323e3 / 0.5811886080e10 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.19e2 / 0.21794572800e11 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.19e2 / 0.2092278988800e13 * pow(a, 0.32e2) * pow(x, 0.32e2) - pow(a, 0.34e2) * pow(x, 0.34e2) / 0.17784371404800e14 + pow(a, 0.36e2) * pow(x, 0.36e2) / 0.6402373705728000e16);
return retval;
}

double PHO_19_1( const double a, const double x )
{
double retval = 0.6734350295e-2 * pow(a, 0.3e1) * sqrt(0.105e3) * exp(-a * a * x * x / 0.2e1) * x * x * (0.210e3 - 0.1330e4 * a * a * x * x + 0.5985e4 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.6783e4 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.2261e4 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.969e3 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.2261e4 / 0.8e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.4199e4 / 0.72e2 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.4199e4 / 0.480e3 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.4199e4 / 0.4320e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.4199e4 / 0.51840e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.323e3 / 0.63360e5 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.323e3 / 0.1330560e7 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.323e3 / 0.37065600e8 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.323e3 / 0.1383782400e10 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.19e2 / 0.4151347200e10 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.19e2 / 0.298896998400e12 * pow(a, 0.32e2) * pow(x, 0.32e2) - pow(a, 0.34e2) * pow(x, 0.34e2) / 0.1693749657600e13 + pow(a, 0.36e2) * pow(x, 0.36e2) / 0.304874938368000e15 - pow(a, 0.38e2) * pow(x, 0.38e2) / 0.121645100408832000e18);
return retval;
}

double PHO_20_1( const double a, const double x )
{
double retval = 0.3061068316e-2 * pow(a, 0.3e1) * sqrt(0.462e3) * exp(-a * a * x * x / 0.2e1) * x * x * (0.231e3 - 0.1540e4 * a * a * x * x + 0.7315e4 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.4389e4 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.24871e5 / 0.8e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.7106e4 / 0.5e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.3553e4 / 0.8e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.3553e4 / 0.36e2 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.46189e5 / 0.2880e4 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.4199e4 / 0.2160e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.46189e5 / 0.259200e6 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.323e3 / 0.25920e5 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.323e3 / 0.483840e6 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.323e3 / 0.11793600e8 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.323e3 / 0.377395200e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.19e2 / 0.943488000e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.19e2 / 0.54344908800e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - pow(a, 0.34e2) * pow(x, 0.34e2) / 0.230965862400e12 + pow(a, 0.36e2) * pow(x, 0.36e2) / 0.27715903488000e14 - pow(a, 0.38e2) * pow(x, 0.38e2) / 0.5529322745856000e16 + pow(a, 0.40e2) * pow(x, 0.40e2) / 0.2432902008176640000e19);
return retval;
}

double PHO_21_1( const double a, const double x )
{
double retval = 0.2794888462e-2 * pow(a, 0.3e1) * sqrt(0.506e3) * exp(-a * a * x * x / 0.2e1) * x * x * (0.253e3 - 0.1771e4 * a * a * x * x + 0.8855e4 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.33649e5 / 0.6e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.33649e5 / 0.8e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.81719e5 / 0.40e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.81719e5 / 0.120e3 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.81719e5 / 0.504e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.81719e5 / 0.2880e4 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.96577e5 / 0.25920e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.96577e5 / 0.259200e6 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.7429e4 / 0.259200e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.7429e4 / 0.4354560e7 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.7429e4 / 0.94348800e8 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.7429e4 / 0.2641766400e10 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.437e3 / 0.5660928000e10 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.437e3 / 0.271724544000e12 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.23e2 / 0.923863449600e12 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.23e2 / 0.83147710464000e14 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.23e2 / 0.11058645491712000e17 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.23e2 / 0.2432902008176640000e19 * pow(a, 0.40e2) * pow(x, 0.40e2) - pow(a, 0.42e2) * pow(x, 0.42e2) / 0.51090942171709440000e20);
return retval;
}

double PHO_22_1( const double a, const double x )
{
double retval = 0.5123962181e-2 * pow(a, 0.3e1) * sqrt(0.138e3) * exp(-a * a * x * x / 0.2e1) * x * x * (0.276e3 - 0.2024e4 * a * a * x * x + 0.5313e4 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.7084e4 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.33649e5 / 0.6e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.14421e5 / 0.5e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.81719e5 / 0.80e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.81719e5 / 0.315e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.81719e5 / 0.1680e4 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.7429e4 / 0.1080e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.96577e5 / 0.129600e6 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.7429e4 / 0.118800e6 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.7429e4 / 0.1814400e7 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.7429e4 / 0.35380800e8 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.7429e4 / 0.880588800e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.437e3 / 0.1651104000e10 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.437e3 / 0.67931136000e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.23e2 / 0.192471552000e12 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.23e2 / 0.13857951744000e14 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.23e2 / 0.1382330686464000e16 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.23e2 / 0.202741834014720000e18 * pow(a, 0.40e2) * pow(x, 0.40e2) - pow(a, 0.42e2) * pow(x, 0.42e2) / 0.2128789257154560000e19 + pow(a, 0.44e2) * pow(x, 0.44e2) / 0.1124000727777607680000e22);
return retval;
}

double PHO_23_1( const double a, const double x )
{
double retval = 0.2357022603e-1 * pow(a, 0.3e1) * sqrt(0.6e1) * exp(-a * a * x * x / 0.2e1) * x * x * (0.300e3 - 0.2300e4 * a * a * x * x + 0.6325e4 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.8855e4 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.44275e5 / 0.6e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.24035e5 / 0.6e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.24035e5 / 0.16e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.408595e6 / 0.1008e4 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.81719e5 / 0.1008e4 * pow(a, 0.16e2) * pow(x, 0.16e2) - 0.37145e5 / 0.3024e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.7429e4 / 0.5184e4 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.7429e4 / 0.57024e5 * pow(a, 0.22e2) * pow(x, 0.22e2) + 0.7429e4 / 0.798336e6 * pow(a, 0.24e2) * pow(x, 0.24e2) - 0.7429e4 / 0.14152320e8 * pow(a, 0.26e2) * pow(x, 0.26e2) + 0.7429e4 / 0.317011968e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.437e3 / 0.528353280e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.437e3 / 0.19020718080e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.23e2 / 0.46193172480e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.23e2 / 0.2771590348800e13 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.23e2 / 0.221172909834240e15 * pow(a, 0.38e2) * pow(x, 0.38e2) + 0.23e2 / 0.24329020081766400e17 * pow(a, 0.40e2) * pow(x, 0.40e2) - pow(a, 0.42e2) * pow(x, 0.42e2) / 0.170303140572364800e18 + pow(a, 0.44e2) * pow(x, 0.44e2) / 0.44960029111104307200e20 - pow(a, 0.46e2) * pow(x, 0.46e2) / 0.25852016738884976640000e23);
return retval;
}

double PHO_24_1( const double a, const double x )
{
double retval = 0.1087856586e-1 * pow(a, 0.3e1) * sqrt(0.26e2) * exp(-a * a * x * x / 0.2e1) * x * x * (0.325e3 - pow(a, 0.46e2) * pow(x, 0.46e2) / 0.994308336110960640000e21 - 0.7429e4 / 0.5987520e7 * pow(a, 0.26e2) * pow(x, 0.26e2) - pow(a, 0.42e2) * pow(x, 0.42e2) / 0.19650362373734400e17 + 0.23e2 / 0.3742926166425600e16 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.312455e6 / 0.504e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.312455e6 / 0.144e3 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.16445e5 / 0.3e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + pow(a, 0.48e2) * pow(x, 0.48e2) / 0.620448401733239439360000e24 + 0.115115e6 / 0.12e2 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.32890e5 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.7475e4 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.23e2 / 0.42533251891200e14 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.2600e4 * a * a * x * x + pow(a, 0.44e2) * pow(x, 0.44e2) / 0.3458463777777254400e19 + 0.23e2 / 0.639597772800e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.23e2 / 0.12436623360e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.96577e5 / 0.4790016e7 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.437e3 / 0.5852528640e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.7429e4 / 0.28512e5 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.437e3 / 0.182891520e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.96577e5 / 0.36288e5 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.7429e4 / 0.121927680e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.96577e5 / 0.4536e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.1062347e7 / 0.8064e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_25_1( const double a, const double x )
{
double retval = 0.6043647701e-2 * pow(a, 0.3e1) * sqrt(0.78e2) * exp(-a * a * x * x / 0.2e1) * x * x * (0.351e3 - pow(a, 0.46e2) * pow(x, 0.46e2) / 0.73652469341552640000e20 - 0.7429e4 / 0.2661120e7 * pow(a, 0.26e2) * pow(x, 0.26e2) - pow(a, 0.42e2) * pow(x, 0.42e2) / 0.2911164796108800e16 + 0.23e2 / 0.693134475264000e15 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.312455e6 / 0.336e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.49335e5 / 0.16e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.29601e5 / 0.4e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + pow(a, 0.48e2) * pow(x, 0.48e2) / 0.22979570434564423680000e23 + 0.49335e5 / 0.4e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.13455e5 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.8775e4 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.23e2 / 0.9451833753600e13 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.2925e4 * a * a * x * x + pow(a, 0.44e2) * pow(x, 0.44e2) / 0.384273753086361600e18 + 0.23e2 / 0.165821644800e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - pow(a, 0.50e2) * pow(x, 0.50e2) / 0.15511210043330985984000000e26 - 0.23e2 / 0.3684925440e10 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.7429e4 / 0.177408e6 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.437e3 / 0.1950842880e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.7429e4 / 0.14784e5 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.437e3 / 0.67737600e8 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.96577e5 / 0.20160e5 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.7429e4 / 0.49674240e8 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.96577e5 / 0.2688e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.187473e6 / 0.896e3 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_26_1( const double a, const double x )
{
double retval = 0.1122391716e-1 * pow(a, 0.3e1) * sqrt(0.21e2) * exp(-a * a * x * x / 0.2e1) * x * x * (0.378e3 - pow(a, 0.46e2) * pow(x, 0.46e2) / 0.7891336000880640000e19 - 0.7429e4 / 0.1235520e7 * pow(a, 0.26e2) * pow(x, 0.26e2) - pow(a, 0.42e2) * pow(x, 0.42e2) / 0.519850856448000e15 + 0.23e2 / 0.148528816128000e15 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.16445e5 / 0.12e2 * pow(a, 0.14e2) * pow(x, 0.14e2) + pow(a, 0.52e2) * pow(x, 0.52e2) / 0.403291461126605635584000000e27 + 0.69069e5 / 0.16e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.9867e4 * pow(a, 0.10e2) * pow(x, 0.10e2) + pow(a, 0.48e2) * pow(x, 0.48e2) / 0.1641397888183173120000e22 + 0.31395e5 / 0.2e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.16380e5 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.20475e5 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.23e2 / 0.2362958438400e13 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.3276e4 * a * a * x * x + pow(a, 0.44e2) * pow(x, 0.44e2) / 0.54896250440908800e17 + 0.23e2 / 0.47377612800e11 * pow(a, 0.36e2) * pow(x, 0.36e2) - pow(a, 0.50e2) * pow(x, 0.50e2) / 0.553971787261820928000000e24 - 0.23e2 / 0.1184440320e10 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.7429e4 / 0.88704e5 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.437e3 / 0.696729600e9 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.7429e4 / 0.7920e4 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.437e3 / 0.26611200e8 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.96577e5 / 0.11520e5 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.7429e4 / 0.21288960e8 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.5681e4 / 0.96e2 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.62491e5 / 0.192e3 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_27_1( const double a, const double x )
{
double retval = 0.3483284635e-2 * pow(a, 0.3e1) * sqrt(0.203e3) * exp(-a * a * x * x / 0.2e1) * x * x * (0.406e3 - 0.29e2 / 0.31565344003522560000e20 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.215441e6 / 0.17297280e8 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.29e2 / 0.3119105138688000e16 * pow(a, 0.42e2) * pow(x, 0.42e2) - pow(a, 0.54e2) * pow(x, 0.54e2) / 0.10888869450418352160768000000e29 + 0.667e3 / 0.1039701712896000e16 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.95381e5 / 0.48e2 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.29e2 / 0.403291461126605635584000000e27 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.95381e5 / 0.16e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.26013e5 / 0.2e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.29e2 / 0.4924193664549519360000e22 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.39585e5 / 0.2e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.39585e5 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.23751e5 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.667e3 / 0.18903667507200e14 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.3654e4 * a * a * x * x + 0.29e2 / 0.274481252204544000e18 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.667e3 / 0.426398515200e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.29e2 / 0.1107943574523641856000000e25 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.667e3 / 0.11844403200e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.215441e6 / 0.1330560e7 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.12673e5 / 0.7664025600e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.215441e6 / 0.126720e6 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.12673e5 / 0.319334400e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.164749e6 / 0.11520e5 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.215441e6 / 0.276756480e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.164749e6 / 0.1728e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.95381e5 / 0.192e3 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_28_1( const double a, const double x )
{
double retval = 0.1625532830e-2 * pow(a, 0.3e1) * sqrt(0.870e3) * exp(-a * a * x * x / 0.2e1) * x * x * (0.435e3 - 0.29e2 / 0.5260890667253760000e19 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.215441e6 / 0.8648640e7 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.29e2 / 0.727791199027200e15 * pow(a, 0.42e2) * pow(x, 0.42e2) - pow(a, 0.54e2) * pow(x, 0.54e2) / 0.362962315013945072025600000e27 + 0.667e3 / 0.277253790105600e15 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.476905e6 / 0.168e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.29e2 / 0.26886097408440375705600000e26 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.130065e6 / 0.16e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.16965e5 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.29e2 / 0.656559155273269248000e21 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.197925e6 / 0.8e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.23751e5 * pow(a, 0.6e1) * pow(x, 0.6e1) + pow(a, 0.56e2) * pow(x, 0.56e2) / 0.304888344611713860501504000000e30 + 0.27405e5 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.667e3 / 0.5671100252160e13 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.4060e4 * a * a * x * x + 0.29e2 / 0.54896250440908800e17 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.667e3 / 0.142132838400e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.29e2 / 0.110794357452364185600000e24 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.667e3 / 0.4342947840e10 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.215441e6 / 0.709632e6 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.12673e5 / 0.3065610240e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.12673e5 / 0.4224e4 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.12673e5 / 0.138378240e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.164749e6 / 0.6912e4 * pow(a, 0.20e2) * pow(x, 0.20e2) + 0.215441e6 / 0.129153024e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.43355e5 / 0.288e3 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.95381e5 / 0.128e3 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_29_1( const double a, const double x )
{
double retval = 0.1520659744e-2 * pow(a, 0.3e1) * sqrt(0.930e3) * exp(-a * a * x * x / 0.2e1) * x * x * (0.465e3 - 0.899e3 / 0.31565344003522560000e20 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.6678671e7 / 0.138378240e9 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.899e3 / 0.5822329592217600e16 * pow(a, 0.42e2) * pow(x, 0.42e2) - 0.31e2 / 0.725924630027890144051200000e27 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.20677e5 / 0.2495284110950400e16 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.1344005e7 / 0.336e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.899e3 / 0.80658292225321127116800000e26 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.175305e6 / 0.16e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.175305e6 / 0.8e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.899e3 / 0.3282795776366346240000e22 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.245427e6 / 0.8e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.56637e5 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.31e2 / 0.304888344611713860501504000000e30 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.31465e5 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.20677e5 / 0.56711002521600e14 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.4495e4 * a * a * x * x + 0.899e3 / 0.384273753086361600e18 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.20677e5 / 0.1563461222400e13 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.899e3 / 0.443177429809456742400000e24 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.20677e5 / 0.52115374080e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.392863e6 / 0.709632e6 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.392863e6 / 0.39852933120e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.392863e6 / 0.76032e5 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.392863e6 / 0.1937295360e10 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.268801e6 / 0.6912e4 * pow(a, 0.20e2) * pow(x, 0.20e2) - pow(a, 0.58e2) * pow(x, 0.58e2) / 0.8841761993739701954543616000000e31 + 0.6678671e7 / 0.1937295360e10 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.268801e6 / 0.1152e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.2956811e7 / 0.2688e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_30_1( const double a, const double x )
{
double retval = 0.5702474040e-2 * pow(a, 0.3e1) * sqrt(0.62e2) * exp(-a * a * x * x / 0.2e1) * x * x * (0.496e3 - 0.899e3 / 0.6904919000770560000e19 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.392863e6 / 0.4324320e7 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.899e3 / 0.1637530197811200e16 * pow(a, 0.42e2) * pow(x, 0.42e2) - 0.31e2 / 0.68055434065114701004800000e26 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.20677e5 / 0.779776284672000e15 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.116870e6 / 0.21e2 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.899e3 / 0.10082286528165140889600000e26 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.58435e5 / 0.4e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.140244e6 / 0.5e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.899e3 / 0.615524208068689920000e21 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.37758e5 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.100688e6 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.31e2 / 0.19055521538232116281344000000e29 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.17980e5 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.20677e5 / 0.19494407116800e14 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.4960e4 * a * a * x * x + 0.899e3 / 0.96068438271590400e17 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.20677e5 / 0.586297958400e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.899e3 / 0.69246473407727616000000e23 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.20677e5 / 0.21171870720e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.392863e6 / 0.399168e6 * pow(a, 0.24e2) * pow(x, 0.24e2) + pow(a, 0.60e2) * pow(x, 0.60e2) / 0.265252859812191058636308480000000e33 + 0.392863e6 / 0.17435658240e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.20677e5 / 0.2376e4 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.392863e6 / 0.908107200e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.268801e6 / 0.4320e4 * pow(a, 0.20e2) * pow(x, 0.20e2) - pow(a, 0.58e2) * pow(x, 0.58e2) / 0.276305062304365686079488000000e30 + 0.6678671e7 / 0.968647680e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.268801e6 / 0.756e3 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.268801e6 / 0.168e3 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_31_1( const double a, const double x )
{
double retval = 0.5356869553e-2 * pow(a, 0.3e1) * sqrt(0.66e2) * exp(-a * a * x * x / 0.2e1) * x * x * (0.528e3 - 0.899e3 / 0.1673919757762560000e19 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.392863e6 / 0.2358720e7 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.899e3 / 0.496221272064000e15 * pow(a, 0.42e2) * pow(x, 0.42e2) - 0.31e2 / 0.8249143523044206182400000e25 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.20677e5 / 0.259925428224000e15 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.642785e6 / 0.84e2 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.899e3 / 0.1527619170934112256000000e25 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.385671e6 / 0.20e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.178002e6 / 0.5e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.899e3 / 0.130565741105479680000e21 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.138446e6 / 0.3e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.39556e5 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.31e2 / 0.1732320139839283298304000000e28 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.20460e5 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.20677e5 / 0.7088875315200e13 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.5456e4 * a * a * x * x + 0.899e3 / 0.26200483164979200e17 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.20677e5 / 0.230965862400e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - pow(a, 0.62e2) * pow(x, 0.62e2) / 0.8222838654177922817725562880000000e34 - 0.899e3 / 0.12590267892314112000000e23 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.20677e5 / 0.8982005760e10 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.20677e5 / 0.12096e5 * pow(a, 0.24e2) * pow(x, 0.24e2) + pow(a, 0.60e2) * pow(x, 0.60e2) / 0.8037965448854274504130560000000e31 + 0.392863e6 / 0.7925299200e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.20677e5 / 0.1440e4 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.392863e6 / 0.440294400e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.2956811e7 / 0.30240e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - pow(a, 0.58e2) * pow(x, 0.58e2) / 0.16745761351779738550272000000e29 + 0.392863e6 / 0.29352960e8 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.268801e6 / 0.504e3 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.128557e6 / 0.56e2 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_32_1( const double a, const double x )
{
double retval = 0.1260439895e-2 * pow(a, 0.3e1) * sqrt(0.1122e4) * exp(-a * a * x * x / 0.2e1) * x * x * (0.561e3 - 0.899e3 / 0.443096406466560000e18 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.351509e6 / 0.1179360e7 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.899e3 / 0.160542176256000e15 * pow(a, 0.42e2) * pow(x, 0.42e2) - 0.31e2 / 0.1213109341624147968000000e25 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.20677e5 / 0.91738386432000e14 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.2185469e7 / 0.210e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.899e3 / 0.269579853694255104000000e24 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.504339e6 / 0.20e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.672452e6 / 0.15e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.899e3 / 0.30721350848348160000e20 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.168113e6 / 0.3e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.46376e5 * pow(a, 0.6e1) * pow(x, 0.6e1) + pow(a, 0.64e2) * pow(x, 0.64e2) / 0.263130836933693530167218012160000000e36 + 0.31e2 / 0.203802369392856858624000000e27 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.23188e5 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.20677e5 / 0.2710452326400e13 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.5984e4 * a * a * x * x + 0.899e3 / 0.7706024460288000e16 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.20677e5 / 0.95103590400e11 * pow(a, 0.36e2) * pow(x, 0.36e2) - pow(a, 0.62e2) * pow(x, 0.62e2) / 0.241848195711115376991928320000000e33 - 0.899e3 / 0.2592113977829376000000e22 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.20677e5 / 0.3962649600e10 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.351509e6 / 0.120960e6 * pow(a, 0.24e2) * pow(x, 0.24e2) + pow(a, 0.60e2) * pow(x, 0.60e2) / 0.472821496991427912007680000000e30 + 0.6678671e7 / 0.63402393600e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.351509e6 / 0.15120e5 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.392863e6 / 0.220147200e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.4569617e7 / 0.30240e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - pow(a, 0.58e2) * pow(x, 0.58e2) / 0.1477567178098212225024000000e28 + 0.6678671e7 / 0.264176640e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.198679e6 / 0.252e3 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.2185469e7 / 0.672e3 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_33_1( const double a, const double x )
{
double retval = 0.1188414758e-2 * pow(a, 0.3e1) * sqrt(0.1190e4) * exp(-a * a * x * x / 0.2e1) * x * x * (0.595e3 - 0.899e3 / 0.126598973276160000e18 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.351509e6 / 0.673920e6 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.899e3 / 0.55043031859200e14 * pow(a, 0.42e2) * pow(x, 0.42e2) - 0.31e2 / 0.207961601421282508800000e24 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.20677e5 / 0.34074257817600e14 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.168113e6 / 0.12e2 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.899e3 / 0.53915970738851020800000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.1176791e7 / 0.36e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.168113e6 / 0.3e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.899e3 / 0.7899775932432384000e19 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.202895e6 / 0.3e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.162316e6 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + pow(a, 0.64e2) * pow(x, 0.64e2) / 0.7518023912391243719063371776000000e34 + 0.31e2 / 0.29114624198979551232000000e26 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.26180e5 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.20677e5 / 0.1084180930560e13 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.6545e4 * a * a * x * x - pow(a, 0.66e2) * pow(x, 0.66e2) / 0.8683317618811886495518194401280000000e37 + 0.899e3 / 0.2421893401804800e16 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.20677e5 / 0.40758681600e11 * pow(a, 0.36e2) * pow(x, 0.36e2) - pow(a, 0.62e2) * pow(x, 0.62e2) / 0.13819896897778021542395904000000e32 - 0.899e3 / 0.592483194932428800000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.20677e5 / 0.1811496960e10 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.351509e6 / 0.72576e5 * pow(a, 0.24e2) * pow(x, 0.24e2) + pow(a, 0.60e2) * pow(x, 0.60e2) / 0.40527556884979535314944000000e29 + 0.392863e6 / 0.1811496960e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.351509e6 / 0.9504e4 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.392863e6 / 0.113218560e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.198679e6 / 0.864e3 * pow(a, 0.20e2) * pow(x, 0.20e2) - pow(a, 0.58e2) * pow(x, 0.58e2) / 0.168864820354081397145600000e27 + 0.351509e6 / 0.7547904e7 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.993395e6 / 0.864e3 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.2185469e7 / 0.480e3 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_34_1( const double a, const double x )
{
double retval = 0.6734350295e-2 * pow(a, 0.3e1) * sqrt(0.35e2) * exp(-a * a * x * x / 0.2e1) * x * x * (0.630e3 - 0.899e3 / 0.38683019612160000e17 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.351509e6 / 0.393120e6 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.899e3 / 0.19876650393600e14 * pow(a, 0.42e2) * pow(x, 0.42e2) - 0.31e2 / 0.40436978054138265600000e23 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.20677e5 / 0.13251100262400e14 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.168113e6 / 0.9e1 * pow(a, 0.14e2) * pow(x, 0.14e2) + pow(a, 0.68e2) * pow(x, 0.68e2) / 0.295232799039604140847618609643520000000e39 + 0.899e3 / 0.11981326830855782400000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.168113e6 / 0.4e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.69564e5 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.899e3 / 0.2194382203453440000e19 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.81158e5 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.62832e5 * pow(a, 0.6e1) * pow(x, 0.6e1) + pow(a, 0.64e2) * pow(x, 0.64e2) / 0.417667995132846873281298432000000e33 + 0.31e2 / 0.4852437366496591872000000e25 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.58905e5 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.20677e5 / 0.451742054400e12 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.7140e4 * a * a * x * x - pow(a, 0.66e2) * pow(x, 0.66e2) / 0.241203267189219069319949844480000000e36 + 0.899e3 / 0.807297800601600e15 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.20677e5 / 0.18114969600e11 * pow(a, 0.36e2) * pow(x, 0.36e2) - pow(a, 0.62e2) * pow(x, 0.62e2) / 0.1151658074814835128532992000000e31 - 0.899e3 / 0.148120798733107200000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.20677e5 / 0.855429120e9 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.351509e6 / 0.44352e5 * pow(a, 0.24e2) * pow(x, 0.24e2) + pow(a, 0.60e2) * pow(x, 0.60e2) / 0.4503061876108837257216000000e28 + 0.392863e6 / 0.905748480e9 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.15283e5 / 0.264e3 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.20677e5 / 0.3144960e7 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.198679e6 / 0.576e3 * pow(a, 0.20e2) * pow(x, 0.20e2) - pow(a, 0.58e2) * pow(x, 0.58e2) / 0.23453447271400194048000000e26 + 0.351509e6 / 0.4193280e7 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.198679e6 / 0.120e3 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.504339e6 / 0.80e2 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_35_1( const double a, const double x )
{
double retval = 0.6370331360e-2 * pow(a, 0.3e1) * sqrt(0.37e2) * exp(-a * a * x * x / 0.2e1) * x * x * (0.666e3 - 0.33263e5 / 0.464196235345920000e18 * pow(a, 0.46e2) * pow(x, 0.46e2) - pow(a, 0.70e2) * pow(x, 0.70e2) / 0.10333147966386144929666651337523200000000e41 - 0.13005833e8 / 0.8648640e7 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.33263e5 / 0.278273105510400e15 * pow(a, 0.42e2) * pow(x, 0.42e2) - 0.1147e4 / 0.323495824433106124800000e24 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.765049e6 / 0.198766503936000e15 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.6220181e7 / 0.252e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.37e2 / 0.295232799039604140847618609643520000000e39 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.33263e5 / 0.107831941477702041600000e24 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.214489e6 / 0.4e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.428978e6 / 0.5e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.33263e5 / 0.24138204237987840000e20 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.96866e5 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.145299e6 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.37e2 / 0.1253003985398540619843895296000000e34 * pow(a, 0.64e2) * pow(x, 0.64e2) + 0.1147e4 / 0.33967061565476143104000000e26 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.66045e5 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.765049e6 / 0.7227872870400e13 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.7770e4 * a * a * x * x - 0.37e2 / 0.482406534378438138639899688960000000e36 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.33263e5 / 0.10494871407820800e17 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.765049e6 / 0.307954483200e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.37e2 / 0.4606632299259340514131968000000e31 * pow(a, 0.62e2) * pow(x, 0.62e2) - 0.33263e5 / 0.1481207987331072000000e22 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.765049e6 / 0.15397724160e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.565471e6 / 0.44352e5 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.37e2 / 0.22515309380544186286080000000e29 * pow(a, 0.60e2) * pow(x, 0.60e2) + 0.765049e6 / 0.905748480e9 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.565471e6 / 0.6336e4 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.765049e6 / 0.62899200e8 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.7351123e7 / 0.14400e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.37e2 / 0.140720683628401164288000000e27 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.13005833e8 / 0.88058880e8 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.565471e6 / 0.240e3 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.6220181e7 / 0.720e3 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_36_1( const double a, const double x )
{
double retval = 0.1005841794e-2 * pow(a, 0.3e1) * sqrt(0.1406e4) * exp(-a * a * x * x / 0.2e1) * x * x * (0.703e3 + pow(a, 0.72e2) * pow(x, 0.72e2) / 0.371993326789901217467999448150835200000000e42 - 0.33263e5 / 0.158803975249920000e18 * pow(a, 0.46e2) * pow(x, 0.46e2) - pow(a, 0.70e2) * pow(x, 0.70e2) / 0.271924946483845919201753982566400000000e39 - 0.10743949e8 / 0.4324320e7 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.33263e5 / 0.109844646912000e15 * pow(a, 0.42e2) * pow(x, 0.42e2) - 0.1147e4 / 0.76617432102577766400000e23 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.765049e6 / 0.83691159552000e14 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.4075291e7 / 0.126e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.37e2 / 0.15538568370505481097243084718080000000e38 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.33263e5 / 0.28376826704658432000000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.4075291e7 / 0.60e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.525844e6 / 0.5e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.33263e5 / 0.7622590811996160000e19 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.920227e6 / 0.8e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.83657e5 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.37e2 / 0.131895156357741117878304768000000e33 * pow(a, 0.64e2) * pow(x, 0.64e2) + 0.1147e4 / 0.7150960329573924864000000e25 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.73815e5 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.765049e6 / 0.3233522073600e13 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.8436e4 * a * a * x * x - 0.37e2 / 0.38084726398297747787360501760000000e35 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.33263e5 / 0.3866531571302400e16 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.14535931e8 / 0.2771590348800e13 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.37e2 / 0.606135828849913225543680000000e30 * pow(a, 0.62e2) * pow(x, 0.62e2) - 0.33263e5 / 0.428770733174784000000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.765049e6 / 0.7698862080e10 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.10743949e8 / 0.532224e6 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.37e2 / 0.3555048849559608360960000000e28 * pow(a, 0.60e2) * pow(x, 0.60e2) + 0.14535931e8 / 0.9057484800e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.10743949e8 / 0.79200e5 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.14535931e8 / 0.660441600e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.10743949e8 / 0.14400e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.37e2 / 0.25922231194705477632000000e26 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.247110827e9 / 0.968647680e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.10743949e8 / 0.3240e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.118183439e9 / 0.10080e5 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_37_1( const double a, const double x )
{
double retval = 0.9542601633e-3 * pow(a, 0.3e1) * sqrt(0.1482e4) * exp(-a * a * x * x / 0.2e1) * x * x * (0.741e3 + pow(a, 0.72e2) * pow(x, 0.72e2) / 0.9538290430510287627384601234636800000000e40 - 0.33263e5 / 0.57006555217920000e17 * pow(a, 0.46e2) * pow(x, 0.46e2) - pow(a, 0.74e2) * pow(x, 0.74e2) / 0.13763753091226345046315979581580902400000000e44 - pow(a, 0.70e2) * pow(x, 0.70e2) / 0.13944869050453636882141229875200000000e38 - 0.10743949e8 / 0.2661120e7 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.33263e5 / 0.45064470528000e14 * pow(a, 0.42e2) * pow(x, 0.42e2) - 0.1147e4 / 0.19645495410917376000000e23 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.765049e6 / 0.36480761856000e14 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.52978783e8 / 0.1260e4 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.37e2 / 0.1195274490038883161326391132160000000e37 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.33263e5 / 0.8003720352595968000000e22 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.1708993e7 / 0.20e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.5126979e7 / 0.40e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.33263e5 / 0.2540863603998720000e19 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.1087541e7 / 0.8e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.191919e6 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.37e2 / 0.16909635430479630497218560000000e32 * pow(a, 0.64e2) * pow(x, 0.64e2) + 0.1147e4 / 0.1650221614517059584000000e25 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.82251e5 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.765049e6 / 0.1492394803200e13 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.9139e4 * a * a * x * x - 0.37e2 / 0.3906125784440794644857487360000000e34 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.33263e5 / 0.1487127527424000e16 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.765049e6 / 0.71066419200e11 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.37e2 / 0.93251665976909727006720000000e29 * pow(a, 0.62e2) * pow(x, 0.62e2) - 0.33263e5 / 0.131929456361472000000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.765049e6 / 0.3948134400e10 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.139671337e9 / 0.4435200e7 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.37e2 / 0.638085690946596372480000000e27 * pow(a, 0.60e2) * pow(x, 0.60e2) + 0.14535931e8 / 0.4877107200e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.10743949e8 / 0.52800e5 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.14535931e8 / 0.372556800e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.139671337e9 / 0.129600e6 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.37e2 / 0.5317380757888303104000000e25 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.10743949e8 / 0.24837120e8 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.139671337e9 / 0.30240e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.52978783e8 / 0.3360e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_38_1( const double a, const double x )
{
double retval = 0.1813094310e-2 * pow(a, 0.3e1) * sqrt(0.390e3) * exp(-a * a * x * x / 0.2e1) * x * x * (0.780e3 + pow(a, 0.72e2) * pow(x, 0.72e2) / 0.476914521525514381369230061731840000000e39 - 0.33263e5 / 0.21377458206720000e17 * pow(a, 0.46e2) * pow(x, 0.46e2) - pow(a, 0.74e2) * pow(x, 0.74e2) / 0.344093827280658626157899489539522560000000e42 - pow(a, 0.70e2) * pow(x, 0.70e2) / 0.1045865178784022766160592240640000000e37 - 0.10743949e8 / 0.1663200e7 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.33263e5 / 0.19152399974400e14 * pow(a, 0.42e2) * pow(x, 0.42e2) + pow(a, 0.76e2) * pow(x, 0.76e2) / 0.523022617466601111760007224100074291200000000e45 - 0.1147e4 / 0.5402511238002278400000e22 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.765049e6 / 0.16416342835200e14 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.3417986e7 / 0.63e2 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.37e2 / 0.119527449003888316132639113216000000e36 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.33263e5 / 0.2401116105778790400000e22 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.1708993e7 / 0.16e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.155363e6 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.33263e5 / 0.889302261399552000e18 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.319865e6 / 0.2e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.109668e6 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.37e2 / 0.2536445314571944574582784000000e31 * pow(a, 0.64e2) * pow(x, 0.64e2) + 0.1147e4 / 0.412555403629264896000000e24 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.45695e5 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.765049e6 / 0.708887531520e12 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.9880e4 * a * a * x * x - 0.37e2 / 0.488265723055099330607185920000000e33 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.33263e5 / 0.594851010969600e15 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.765049e6 / 0.35533209600e11 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.37e2 / 0.16319041545959202226176000000e29 * pow(a, 0.62e2) * pow(x, 0.62e2) - 0.33263e5 / 0.42877073317478400000e20 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.765049e6 / 0.2072770560e10 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.10743949e8 / 0.221760e6 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.37e2 / 0.127617138189319274496000000e27 * pow(a, 0.60e2) * pow(x, 0.60e2) + 0.14535931e8 / 0.2682408960e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.10743949e8 / 0.35640e5 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.631997e6 / 0.9313920e7 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.139671337e9 / 0.90720e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.37e2 / 0.1196410670524868198400000e25 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.10743949e8 / 0.14902272e8 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.4816253e7 / 0.756e3 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.52978783e8 / 0.2520e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_39_1( const double a, const double x )
{
double retval = 0.1724650685e-2 * pow(a, 0.3e1) * sqrt(0.410e3) * exp(-a * a * x * x / 0.2e1) * x * x * (0.820e3 + 0.41e2 / 0.1430743564576543144107690185195520000000e40 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.1363783e7 / 0.342039331307520000e18 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.41e2 / 0.688187654561317252315798979079045120000000e42 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.41e2 / 0.4183460715136091064642368962560000000e37 * pow(a, 0.70e2) * pow(x, 0.70e2) - 0.440501909e9 / 0.43243200e8 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.1363783e7 / 0.344743199539200e15 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.41e2 / 0.523022617466601111760007224100074291200000000e45 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.47027e5 / 0.64830134856027340800000e23 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.31367009e8 / 0.311910513868800e15 * pow(a, 0.40e2) * pow(x, 0.40e2) - pow(a, 0.78e2) * pow(x, 0.78e2) / 0.20397882081197443358640281739902897356800000000e47 - 0.70068713e8 / 0.1008e4 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.1517e4 / 0.597637245019441580663195566080000000e36 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.1363783e7 / 0.31214509375124275200000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.6369883e7 / 0.48e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.374699e6 / 0.2e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.1363783e7 / 0.13339533920993280000e20 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.374699e6 / 0.2e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.374699e6 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.1517e4 / 0.17755117202003612022079488000000e32 * pow(a, 0.64e2) * pow(x, 0.64e2) + 0.47027e5 / 0.4538109439921913856000000e25 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.50635e5 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.31367009e8 / 0.14177750630400e14 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.10660e5 * a * a * x * x - 0.1517e4 / 0.2929594338330595983643115520000000e34 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.1363783e7 / 0.10112467186483200e17 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.31367009e8 / 0.746197401600e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.1517e4 / 0.130552332367673617809408000000e30 * pow(a, 0.62e2) * pow(x, 0.62e2) - 0.1363783e7 / 0.600279026444697600000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.31367009e8 / 0.45600952320e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.440501909e9 / 0.5987520e7 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.1517e4 / 0.1148554243703873470464000000e28 * pow(a, 0.60e2) * pow(x, 0.60e2) + 0.25911877e8 / 0.2682408960e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.440501909e9 / 0.997920e6 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.25911877e8 / 0.223534080e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.197466373e9 / 0.90720e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.1517e4 / 0.11964106705248681984000000e26 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.440501909e9 / 0.372556800e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.197466373e9 / 0.22680e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.70068713e8 / 0.2520e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_40_1( const double a, const double x )
{
double retval = 0.8212622311e-3 * pow(a, 0.3e1) * sqrt(0.1722e4) * exp(-a * a * x * x / 0.2e1) * x * x * (0.861e3 + 0.41e2 / 0.136261291864432680391208589066240000000e39 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.1363783e7 / 0.138444491243520000e18 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.41e2 / 0.49156261040094089451128498505646080000000e41 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.41e2 / 0.498031037516201317219329638400000000e36 * pow(a, 0.70e2) * pow(x, 0.70e2) - 0.440501909e9 / 0.27799200e8 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.1363783e7 / 0.155955256934400e15 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.41e2 / 0.24905838926981005321905105909527347200000000e44 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.47027e5 / 0.20066470312579891200000e23 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.31367009e8 / 0.148528816128000e15 * pow(a, 0.40e2) * pow(x, 0.40e2) - pow(a, 0.78e2) * pow(x, 0.78e2) / 0.485663859076129603777149565235783270400000000e45 - 0.6369883e7 / 0.72e2 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.1517e4 / 0.85376749288491654380456509440000000e35 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.1363783e7 / 0.10404836458374758400000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.2622893e7 / 0.16e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.1124097e7 / 0.5e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.1363783e7 / 0.5081727207997440000e19 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.2622893e7 / 0.12e2 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.141778e6 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.1517e4 / 0.3381927086095926099443712000000e31 * pow(a, 0.64e2) * pow(x, 0.64e2) + 0.47027e5 / 0.1296602697120546816000000e25 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.55965e5 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.31367009e8 / 0.7088875315200e13 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.11480e5 * a * a * x * x - 0.1517e4 / 0.488265723055099330607185920000000e33 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.1363783e7 / 0.4333914508492800e16 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.31367009e8 / 0.390865305600e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.1517e4 / 0.27975499793072918102016000000e29 * pow(a, 0.62e2) * pow(x, 0.62e2) - 0.1363783e7 / 0.214385366587392000000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.1363783e7 / 0.1085736960e10 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.440501909e9 / 0.3991680e7 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.1517e4 / 0.273465296119969873920000000e27 * pow(a, 0.60e2) * pow(x, 0.60e2) + 0.25911877e8 / 0.1532805120e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.15189721e8 / 0.23760e5 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.25911877e8 / 0.133056000e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.197466373e9 / 0.64800e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.1517e4 / 0.3133456518041321472000000e25 * pow(a, 0.58e2) * pow(x, 0.58e2) + pow(a, 0.80e2) * pow(x, 0.80e2) / 0.815915283247897734345611269596115894272000000000e48 + 0.440501909e9 / 0.230630400e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.6369883e7 / 0.540e3 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.70068713e8 / 0.1920e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_41_1( const double a, const double x )
{
double retval = 0.7830639878e-3 * pow(a, 0.3e1) * sqrt(0.1806e4) * exp(-a * a * x * x / 0.2e1) * x * x * (0.903e3 + 0.1763e4 / 0.681306459322163401956042945331200000000e39 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.58642669e8 / 0.2492000842383360000e19 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.1763e4 / 0.196625044160376357804513994022584320000000e42 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.1763e4 / 0.2988186225097207903315977830400000000e37 * pow(a, 0.70e2) * pow(x, 0.70e2) - 0.18941582087e11 / 0.778377600e9 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.58642669e8 / 0.3119105138688000e16 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.1763e4 / 0.74717516780943015965715317728582041600000000e44 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.2022161e7 / 0.280930584376118476800000e24 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.1348781387e10 / 0.3119105138688000e16 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.43e2 / 0.971327718152259207554299130471566540800000000e45 * pow(a, 0.78e2) * pow(x, 0.78e2) - 0.16112057e8 / 0.144e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.65231e5 / 0.597637245019441580663195566080000000e36 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.58642669e8 / 0.156072546875621376000000e24 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.16112057e8 / 0.80e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.16112057e8 / 0.60e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.58642669e8 / 0.86389362535956480000e20 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.3048227e7 / 0.12e2 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.160433e6 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.65231e5 / 0.30437343774863334894993408000000e32 * pow(a, 0.64e2) * pow(x, 0.64e2) + 0.2022161e7 / 0.16855835062567108608000000e26 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.61705e5 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.1348781387e10 / 0.155955256934400e15 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.12341e5 * a * a * x * x - 0.65231e5 / 0.3906125784440794644857487360000000e34 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.58642669e8 / 0.82344375661363200e17 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.58642669e8 / 0.390865305600e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.65231e5 / 0.279754997930729181020160000000e30 * pow(a, 0.62e2) * pow(x, 0.62e2) - 0.58642669e8 / 0.3430165865398272000000e22 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.58642669e8 / 0.26057687040e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.653158003e9 / 0.3991680e7 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.65231e5 / 0.3008118257319668613120000000e28 * pow(a, 0.60e2) * pow(x, 0.60e2) + 0.1114210711e10 / 0.38320128000e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - pow(a, 0.82e2) * pow(x, 0.82e2) / 0.33452526613163807108170062053440751665152000000000e50 - 0.653158003e9 / 0.712800e6 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.1114210711e10 / 0.3459456000e10 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.273904969e9 / 0.64800e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.65231e5 / 0.37601478216495857664000000e26 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.43e2 / 0.815915283247897734345611269596115894272000000000e48 * pow(a, 0.80e2) * pow(x, 0.80e2) + 0.18941582087e11 / 0.6227020800e10 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.273904969e9 / 0.17280e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.273904969e9 / 0.5760e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_42_1( const double a, const double x )
{
double retval = 0.1494940340e-2 * pow(a, 0.3e1) * sqrt(0.473e3) * exp(-a * a * x * x / 0.2e1) * x * x * (0.946e3 + 0.1763e4 / 0.92905426271204100266733128908800000000e38 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.58642669e8 / 0.1076091272847360000e19 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.1763e4 / 0.22343755018224586114149317502566400000000e41 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.1763e4 / 0.475393263083646711891178291200000000e36 * pow(a, 0.70e2) * pow(x, 0.70e2) - 0.653158003e9 / 0.17690400e8 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.58642669e8 / 0.1488663816192000e16 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.1763e4 / 0.6792501525540274178701392520780185600000000e43 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.2022161e7 / 0.95771790128222208000000e23 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.1348781387e10 / 0.1559552569344000e16 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.43e2 / 0.66226889874017673242338577077606809600000000e44 * pow(a, 0.78e2) * pow(x, 0.78e2) - 0.177232627e9 / 0.1260e4 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.65231e5 / 0.108661317276262105575126466560000000e36 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.58642669e8 / 0.56753653409316864000000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.177232627e9 / 0.720e3 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.4790071e7 / 0.15e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.58642669e8 / 0.35341102855618560000e20 * pow(a, 0.48e2) * pow(x, 0.48e2) + 0.1764763e7 / 0.6e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.543004e6 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.65231e5 / 0.6917578130650757930680320000000e31 * pow(a, 0.64e2) * pow(x, 0.64e2) + 0.2022161e7 / 0.5363220247180443648000000e25 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.135751e6 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.58642669e8 / 0.3544437657600e13 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.13244e5 * a * a * x * x - 0.65231e5 / 0.798980274090162540993576960000000e33 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.58642669e8 / 0.37429261664256000e17 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.58642669e8 / 0.213199257600e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.65231e5 / 0.69938749482682295255040000000e29 * pow(a, 0.62e2) * pow(x, 0.62e2) + pow(a, 0.84e2) * pow(x, 0.84e2) / 0.1405006117752879898543142606244511569936384000000000e52 - 0.58642669e8 / 0.1325291357085696000000e22 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.58642669e8 / 0.14805504000e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.653158003e9 / 0.2721600e7 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.65231e5 / 0.820395888359909621760000000e27 * pow(a, 0.60e2) * pow(x, 0.60e2) + 0.1114210711e10 / 0.22643712000e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - pow(a, 0.82e2) * pow(x, 0.82e2) / 0.760284695753722888822046864850926174208000000000e48 - 0.21069613e8 / 0.16200e5 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.1114210711e10 / 0.2122848000e10 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.3012954659e10 / 0.518400e6 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.65231e5 / 0.11109527654873776128000000e26 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.43e2 / 0.37087058329449897015709603163459813376000000000e47 * pow(a, 0.80e2) * pow(x, 0.80e2) + 0.18941582087e11 / 0.3962649600e10 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.273904969e9 / 0.12960e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.177232627e9 / 0.2880e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_43_1( const double a, const double x )
{
double retval = 0.4285495642e-2 * pow(a, 0.3e1) * sqrt(0.55e2) * exp(-a * a * x * x / 0.2e1) * x * x * (0.990e3 + 0.1763e4 / 0.14451955197742860041491820052480000000e38 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.58642669e8 / 0.478262787932160000e18 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.1763e4 / 0.2979167335763278148553242333675520000000e40 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.1763e4 / 0.84514357881537193225098362880000000e35 * pow(a, 0.70e2) * pow(x, 0.70e2) - 0.653158003e9 / 0.11793600e8 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.58642669e8 / 0.727791199027200e15 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.1763e4 / 0.754722391726697130966821391197798400000000e42 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.2022161e7 / 0.34052192045590118400000e23 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.58642669e8 / 0.34656723763200e14 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.43e2 / 0.5886834655468237621541206851342827520000000e43 * pow(a, 0.78e2) * pow(x, 0.78e2) - 0.177232627e9 / 0.1008e4 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.65231e5 / 0.21732263455252421115025293312000000e35 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.58642669e8 / 0.21440269065741926400000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.4790071e7 / 0.16e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.756327e6 / 0.2e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.58642669e8 / 0.14921798983483392000e20 * pow(a, 0.48e2) * pow(x, 0.48e2) - pow(a, 0.86e2) * pow(x, 0.86e2) / 0.60415263063373835637355132068513997507264512000000000e53 + 0.678755e6 / 0.2e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.407253e6 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.65231e5 / 0.1690963543047963049721856000000e31 * pow(a, 0.64e2) * pow(x, 0.64e2) + 0.2022161e7 / 0.1787740082393481216000000e25 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.148995e6 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.58642669e8 / 0.1890366750720e13 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.14190e5 * a * a * x * x - 0.65231e5 / 0.177551172020036120220794880000000e33 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.58642669e8 / 0.17466988776652800e17 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.58642669e8 / 0.118444032000e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.65231e5 / 0.18650333195381945401344000000e29 * pow(a, 0.62e2) * pow(x, 0.62e2) + pow(a, 0.84e2) * pow(x, 0.84e2) / 0.31222358172286219967625391249878034887475200000000e50 - 0.58642669e8 / 0.530116542834278400000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.58642669e8 / 0.8554291200e10 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.21069613e8 / 0.60480e5 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.65231e5 / 0.237003256637307224064000000e27 * pow(a, 0.60e2) * pow(x, 0.60e2) + 0.1114210711e10 / 0.13586227200e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - pow(a, 0.82e2) * pow(x, 0.82e2) / 0.33790430922387683947646527326707829964800000000e47 - 0.21069613e8 / 0.11520e5 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.1114210711e10 / 0.1320883200e10 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.273904969e9 / 0.34560e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.65231e5 / 0.3456297492627397017600000e25 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.43e2 / 0.2472470555296659801047306877563987558400000000e46 * pow(a, 0.80e2) * pow(x, 0.80e2) + 0.653158003e9 / 0.88058880e8 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.16112057e8 / 0.576e3 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.177232627e9 / 0.2240e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_44_1( const double a, const double x )
{
double retval = 0.2049584872e-2 * pow(a, 0.3e1) * sqrt(0.230e3) * exp(-a * a * x * x / 0.2e1) * x * x * (0.1035e4 + 0.1763e4 / 0.2513383512650932181129012183040000000e37 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.58642669e8 / 0.218337359708160000e18 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.1763e4 / 0.453351551094411892171145572515840000000e39 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.1763e4 / 0.16535417846387711717954027520000000e35 * pow(a, 0.70e2) * pow(x, 0.70e2) - 0.484601099e9 / 0.5896800e7 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.58642669e8 / 0.363895599513600e15 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.1763e4 / 0.98442051094786582300020181460582400000000e41 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.2022161e7 / 0.12584505755978956800000e23 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.1348781387e10 / 0.415880685158400e15 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.43e2 / 0.639873332116112784950131179493785600000000e42 * pow(a, 0.78e2) * pow(x, 0.78e2) + pow(a, 0.88e2) * pow(x, 0.88e2) / 0.2658271574788448768043625811014615890319638528000000000e55 - 0.110171633e9 / 0.504e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.65231e5 / 0.4724405098967917633701150720000000e34 * pow(a, 0.68e2) * pow(x, 0.68e2) + 0.58642669e8 / 0.8389670503985971200000e22 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.5798507e7 / 0.16e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.446039e6 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.58642669e8 / 0.6487738688471040000e19 * pow(a, 0.48e2) * pow(x, 0.48e2) - pow(a, 0.86e2) * pow(x, 0.86e2) / 0.1313375283986387731246850697141608641462272000000000e52 + 0.3122273e7 / 0.8e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.228459e6 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.65231e5 / 0.441120924273381665144832000000e30 * pow(a, 0.64e2) * pow(x, 0.64e2) + 0.2022161e7 / 0.621822637354254336000000e24 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.163185e6 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.1348781387e10 / 0.23629584384000e14 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.15180e5 * a * a * x * x - 0.65231e5 / 0.42457888961312985270190080000000e32 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.1348781387e10 / 0.192136876543180800e18 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.1348781387e10 / 0.1539772416000e13 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.65231e5 / 0.5270746337825332396032000000e28 * pow(a, 0.62e2) * pow(x, 0.62e2) + pow(a, 0.84e2) * pow(x, 0.84e2) / 0.1357493833577661737722843097820784125542400000000e49 - 0.58642669e8 / 0.218961180735897600000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.1348781387e10 / 0.115482931200e12 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.484601099e9 / 0.967680e6 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.65231e5 / 0.72131425933093502976000000e26 * pow(a, 0.60e2) * pow(x, 0.60e2) + 0.25626846353e11 / 0.190207180800e12 * pow(a, 0.32e2) * pow(x, 0.32e2) - pow(a, 0.82e2) * pow(x, 0.82e2) / 0.2203723755807892431368251782176597606400000000e46 - 0.484601099e9 / 0.190080e6 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.883684357e9 / 0.660441600e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.370577311e9 / 0.34560e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.65231e5 / 0.1127053530204585984000000e25 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.43e2 / 0.214997439591013895743244076309911961600000000e45 * pow(a, 0.80e2) * pow(x, 0.80e2) + 0.15022634069e11 / 0.1320883200e10 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.370577311e9 / 0.10080e5 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.4076350421e10 / 0.40320e5 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_45_1( const double a, const double x )
{
double retval = 0.6541228316e-3 * pow(a, 0.3e1) * sqrt(0.2162e4) * exp(-a * a * x * x / 0.2e1) * x * x * (0.1081e4 + 0.82861e5 / 0.22620451613858389630161109647360000000e38 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.2756205443e10 / 0.4803421913579520000e19 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.82861e5 / 0.3626812408755295137369164580126720000000e40 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.82861e5 / 0.165354178463877117179540275200000000e36 * pow(a, 0.70e2) * pow(x, 0.70e2) - 0.22776251653e11 / 0.188697600e9 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.2756205443e10 / 0.8733494388326400e16 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.82861e5 / 0.689094357663506076100141270224076800000000e42 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.95041567e8 / 0.226521103607621222400000e24 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.63392725189e11 / 0.10397017128960000e17 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.2021e4 / 0.3839239992696676709700787076962713600000000e43 * pow(a, 0.78e2) * pow(x, 0.78e2) + 0.47e2 / 0.2658271574788448768043625811014615890319638528000000000e55 * pow(a, 0.88e2) * pow(x, 0.88e2) - 0.272529829e9 / 0.1008e4 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.3065857e7 / 0.51968456088647093970712657920000000e35 * pow(a, 0.68e2) * pow(x, 0.68e2) - pow(a, 0.90e2) * pow(x, 0.90e2) / 0.119622220865480194561963161495657715064383733760000000000e57 + 0.2756205443e10 / 0.159403739575733452800000e24 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.20963833e8 / 0.48e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.20963833e8 / 0.40e2 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.2756205443e10 / 0.136242512457891840000e21 * pow(a, 0.48e2) * pow(x, 0.48e2) - 0.47e2 / 0.2626750567972775462493701394283217282924544000000000e52 * pow(a, 0.86e2) * pow(x, 0.86e2) + 0.3579191e7 / 0.8e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.511313e6 / 0.2e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.3065857e7 / 0.5734572015553961646882816000000e31 * pow(a, 0.64e2) * pow(x, 0.64e2) + 0.95041567e8 / 0.10570984835022323712000000e26 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.178365e6 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.63392725189e11 / 0.614369193984000e15 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.16215e5 * a * a * x * x - 0.3065857e7 / 0.509494667535755823242280960000000e33 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.2756205443e10 / 0.192136876543180800e18 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.63392725189e11 / 0.41573855232000e14 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.3065857e7 / 0.73790448729554653544448000000e29 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.47e2 / 0.4072481500732985213168529293462352376627200000000e49 * pow(a, 0.84e2) * pow(x, 0.84e2) - 0.2756205443e10 / 0.4379223614717952000000e22 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.63392725189e11 / 0.3233522073600e13 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.22776251653e11 / 0.31933440e8 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.3065857e7 / 0.1081971388996402544640000000e28 * pow(a, 0.60e2) * pow(x, 0.60e2) + 0.41533164779e11 / 0.190207180800e12 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.47e2 / 0.8814895023231569725473007128706390425600000000e46 * pow(a, 0.82e2) * pow(x, 0.82e2) - 0.1339779509e10 / 0.380160e6 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.41533164779e11 / 0.19813248000e11 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.17417133617e11 / 0.1209600e7 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.3065857e7 / 0.18032856483273375744000000e26 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.2021e4 / 0.1074987197955069478716220381549559808000000000e46 * pow(a, 0.80e2) * pow(x, 0.80e2) + 0.22776251653e11 / 0.1320883200e10 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.17417133617e11 / 0.362880e6 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.5178066751e10 / 0.40320e5 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_46_1( const double a, const double x )
{
double retval = 0.2507470855e-2 * pow(a, 0.3e1) * sqrt(0.141e3) * exp(-a * a * x * x / 0.2e1) * x * x * (0.1128e4 + 0.82861e5 / 0.4712594086220497839616897843200000000e37 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.2756205443e10 / 0.2301639666923520000e19 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.82861e5 / 0.680027326641617838256718358773760000000e39 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.82861e5 / 0.37893665897971839353644646400000000e35 * pow(a, 0.70e2) * pow(x, 0.70e2) - 0.22776251653e11 / 0.129729600e9 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.2756205443e10 / 0.4548694993920000e16 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.82861e5 / 0.114849059610584346016690211704012800000000e42 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.95041567e8 / 0.89664603511350067200000e23 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.63392725189e11 / 0.5631717611520000e16 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.2021e4 / 0.559889165601598686831364782057062400000000e42 * pow(a, 0.78e2) * pow(x, 0.78e2) + 0.47e2 / 0.110761315616185365335151075458942328763318272000000000e54 * pow(a, 0.88e2) * pow(x, 0.88e2) - 0.20963833e8 / 0.63e2 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.3065857e7 / 0.12992114022161773492678164480000000e35 * pow(a, 0.68e2) * pow(x, 0.68e2) + pow(a, 0.92e2) * pow(x, 0.92e2) / 0.5502622159812088949850305428800254892961651752960000000000e58 - pow(a, 0.90e2) * pow(x, 0.90e2) / 0.2492129601364170720040899197826202397174661120000000000e55 + 0.2756205443e10 / 0.66418224823222272000000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.20963833e8 / 0.40e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.3067878e7 / 0.5e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.2756205443e10 / 0.62444484876533760000e20 * pow(a, 0.48e2) * pow(x, 0.48e2) - 0.47e2 / 0.164171910498298466405856337142701080182784000000000e51 * pow(a, 0.86e2) * pow(x, 0.86e2) + 0.511313e6 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.285384e6 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.3065857e7 / 0.1672583504536572147007488000000e31 * pow(a, 0.64e2) * pow(x, 0.64e2) + 0.95041567e8 / 0.3964119313133371392000000e25 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.97290e5 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.63392725189e11 / 0.345582671616000e15 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.17296e5 * a * a * x * x - 0.3065857e7 / 0.137988139124267202128117760000000e33 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.2756205443e10 / 0.96068438271590400e17 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.63392725189e11 / 0.24251415552000e14 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.3065857e7 / 0.23059515227985829232640000000e29 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.47e2 / 0.339373458394415434430710774455196031385600000000e48 * pow(a, 0.84e2) * pow(x, 0.84e2) - 0.2756205443e10 / 0.1915910331439104000000e22 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.2185956041e10 / 0.67365043200e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.1339779509e10 / 0.1330560e7 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.3065857e7 / 0.360657129665467514880000000e27 * pow(a, 0.60e2) * pow(x, 0.60e2) + 0.41533164779e11 / 0.118879488000e12 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.47e2 / 0.918218231586621846403438242573582336000000000e45 * pow(a, 0.82e2) * pow(x, 0.82e2) - 0.1339779509e10 / 0.277200e6 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.1339779509e10 / 0.412776000e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.17417133617e11 / 0.907200e6 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.3065857e7 / 0.6386636671159320576000000e25 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.2021e4 / 0.134373399744383684839527547693694976000000000e45 * pow(a, 0.80e2) * pow(x, 0.80e2) + 0.22776251653e11 / 0.880588800e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.470733341e9 / 0.7560e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.272529829e9 / 0.1680e4 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_47_1( const double a, const double x )
{
double retval = 0.1683587574e-1 * pow(a, 0.3e1) * sqrt(0.3e1) * exp(-a * a * x * x / 0.2e1) * x * x * (0.1176e4 + 0.82861e5 / 0.1057929284661744412975221964800000000e37 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.2756205443e10 / 0.1127333714411520000e19 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.82861e5 / 0.138781087069717926174840481382400000000e39 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.82861e5 / 0.9280081444401266780484403200000000e34 * pow(a, 0.70e2) * pow(x, 0.70e2) - 0.9378456563e10 / 0.37065600e8 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.2756205443e10 / 0.2413593262080000e16 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.82861e5 / 0.21094725234597124778575753170124800000000e41 * pow(a, 0.76e2) * pow(x, 0.76e2) - 0.95041567e8 / 0.36597797351571456000000e23 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.63392725189e11 / 0.3103191336960000e16 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.2021e4 / 0.91410476016587540707161597070540800000000e41 * pow(a, 0.78e2) * pow(x, 0.78e2) + 0.47e2 / 0.6781305037725634612356188293404632373264384000000000e52 * pow(a, 0.88e2) * pow(x, 0.88e2) - 0.146746831e9 / 0.360e3 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.3065857e7 / 0.3446887393634756232751349760000000e34 * pow(a, 0.68e2) * pow(x, 0.68e2) + pow(a, 0.92e2) * pow(x, 0.92e2) / 0.112298411424736509180618478138780712101258199040000000000e57 - pow(a, 0.94e2) * pow(x, 0.94e2) / 0.258623241511168180642964355153611979969197632389120000000000e60 - pow(a, 0.90e2) * pow(x, 0.90e2) / 0.101719575565884519185342824401069485598965760000000000e54 + 0.2756205443e10 / 0.28464953495666688000000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.25054337e8 / 0.40e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.3579191e7 / 0.5e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.2756205443e10 / 0.29310676574699520000e20 * pow(a, 0.48e2) * pow(x, 0.48e2) - 0.47e2 / 0.13401788612105997257620925481036822872064000000000e50 * pow(a, 0.86e2) * pow(x, 0.86e2) + 0.582659e6 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.317814e6 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.3065857e7 / 0.512015358531603718471680000000e30 * pow(a, 0.64e2) * pow(x, 0.64e2) + 0.95041567e8 / 0.1537107488766001152000000e25 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.105938e6 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.63392725189e11 / 0.197475812352000e15 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.18424e5 * a * a * x * x - 0.3065857e7 / 0.39425182606933486322319360000000e32 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.2756205443e10 / 0.49014509322240000e17 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.2185956041e10 / 0.494926848000e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.3065857e7 / 0.7529637625464760565760000000e28 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.47e2 / 0.34629944734124023921501099434203676672000000000e47 * pow(a, 0.84e2) * pow(x, 0.84e2) - 0.2756205443e10 / 0.860204638605312000000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.2185956041e10 / 0.41243904000e11 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.1339779509e10 / 0.950400e6 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.3065857e7 / 0.125125942945162199040000000e27 * pow(a, 0.60e2) * pow(x, 0.60e2) + 0.1339779509e10 / 0.2426112000e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.47e2 / 0.112434885500402675069808764396765184000000000e45 * pow(a, 0.82e2) * pow(x, 0.82e2) - 0.9378456563e10 / 0.1425600e7 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.1339779509e10 / 0.269568000e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.3295133387e10 / 0.129600e6 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.3065857e7 / 0.2346111430221791232000000e25 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.2021e4 / 0.19196199963483383548503935384813568000000000e44 * pow(a, 0.80e2) * pow(x, 0.80e2) + 0.22776251653e11 / 0.593049600e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.173428073e9 / 0.2160e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.146746831e9 / 0.720e3 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_48_1( const double a, const double x )
{
double retval = 0.2020305089e-1 * pow(a, 0.3e1) * sqrt(0.2e1) * exp(-a * a * x * x / 0.2e1) * x * x * (0.1225e4 + 0.82861e5 / 0.253903028318818659114053271552000000e36 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.2756205443e10 / 0.563666857205760000e18 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.82861e5 / 0.30531839155337943758464905904128000000e38 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.82861e5 / 0.2412821175544329362925944832000000e34 * pow(a, 0.70e2) * pow(x, 0.70e2) - 0.1339779509e10 / 0.3706560e7 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.2756205443e10 / 0.1303340361523200e16 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.82861e5 / 0.4218945046919424955715150634024960000000e40 * pow(a, 0.76e2) * pow(x, 0.76e2) + pow(a, 0.96e2) * pow(x, 0.96e2) / 0.12413915592536072670862289047373375038521486354677760000000000e62 - 0.95041567e8 / 0.15371074887660011520000e23 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.63392725189e11 / 0.1737787148697600e16 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.2021e4 / 0.16453885682985757327289087472697344000000e41 * pow(a, 0.78e2) * pow(x, 0.78e2) + 0.47e2 / 0.542504403018050768988495063472370589861150720000000e51 * pow(a, 0.88e2) * pow(x, 0.88e2) - 0.17895955e8 / 0.36e2 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.3065857e7 / 0.965128470217731745170377932800000e33 * pow(a, 0.68e2) * pow(x, 0.68e2) + pow(a, 0.92e2) * pow(x, 0.92e2) / 0.4491936456989460367224739125551228484050327961600000000e55 - pow(a, 0.94e2) * pow(x, 0.94e2) / 0.5172464830223363612859287103072239599383952647782400000000e58 - pow(a, 0.90e2) * pow(x, 0.90e2) / 0.6103174533953071151120569464064169135937945600000000e52 + 0.2756205443e10 / 0.12524579538093342720000e23 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.17895955e8 / 0.24e2 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.832370e6 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.2756205443e10 / 0.14069124755855769600e20 * pow(a, 0.48e2) * pow(x, 0.48e2) - 0.47e2 / 0.1340178861210599725762092548103682287206400000000e49 * pow(a, 0.86e2) * pow(x, 0.86e2) + 0.1324225e7 / 0.2e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.1059380e7 / 0.3e1 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.3065857e7 / 0.163844914730113189910937600000e30 * pow(a, 0.64e2) * pow(x, 0.64e2) + 0.95041567e8 / 0.614842995506400460800000e24 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.115150e6 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.2185956041e10 / 0.3949516247040e13 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.19600e5 * a * a * x * x - 0.3065857e7 / 0.11827554782080045896695808000000e32 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.2756205443e10 / 0.25487544847564800e17 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.2185956041e10 / 0.296956108800e12 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.3065857e7 / 0.2560076792658018592358400000e28 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.47e2 / 0.4155593368094882870580131932104441200640000000e46 * pow(a, 0.84e2) * pow(x, 0.84e2) - 0.2756205443e10 / 0.395694133758443520000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.70514711e8 / 0.824878080e9 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.1339779509e10 / 0.684288e6 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.3065857e7 / 0.45045339460258391654400000e26 * pow(a, 0.60e2) * pow(x, 0.60e2) + 0.1339779509e10 / 0.1552711680e10 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.47e2 / 0.15740883970056374509773227015547125760000000e44 * pow(a, 0.82e2) * pow(x, 0.82e2) - 0.253471799e9 / 0.28512e5 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.1339779509e10 / 0.177914880e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.173428073e9 / 0.5184e4 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.3065857e7 / 0.891522343484280668160000e24 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.2021e4 / 0.3071391994157341367760629661570170880000000e43 * pow(a, 0.80e2) * pow(x, 0.80e2) + 0.1339779509e10 / 0.23721984e8 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.66703105e8 / 0.648e3 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.146746831e9 / 0.576e3 * pow(a, 0.16e2) * pow(x, 0.16e2));
return retval;
}

double PHO_49_1( const double a, const double x )
{
double retval = 0.2772967769e-2 * pow(a, 0.3e1) * sqrt(0.102e3) * exp(-a * a * x * x / 0.2e1) * x * x * (0.1275e4 + 0.82861e5 / 0.64720379767542011146719461376000000e35 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.2756205443e10 / 0.287359574261760000e18 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.82861e5 / 0.7183962154197163237285860212736000000e37 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.82861e5 / 0.662343067796482570214965248000000e33 * pow(a, 0.70e2) * pow(x, 0.70e2) - 0.22776251653e11 / 0.44478720e8 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.2756205443e10 / 0.715559414169600e15 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.82861e5 / 0.909968539531640676722875626946560000000e39 * pow(a, 0.76e2) * pow(x, 0.76e2) + pow(a, 0.96e2) * pow(x, 0.96e2) / 0.243410109657570052369848804850458334088656595189760000000000e60 - 0.95041567e8 / 0.6630659755461181440000e22 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.2185956041e10 / 0.34074257817600e14 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.2021e4 / 0.3226252094703089672017468131901440000000e40 * pow(a, 0.78e2) * pow(x, 0.78e2) + 0.47e2 / 0.53186706178240271469460300340428489202073600000000e50 * pow(a, 0.88e2) * pow(x, 0.88e2) - 0.43461605e8 / 0.72e2 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.3065857e7 / 0.283861314769921101520699392000000e33 * pow(a, 0.68e2) * pow(x, 0.68e2) + pow(a, 0.92e2) * pow(x, 0.92e2) / 0.264231556293497668660278772091248734355901644800000000e54 - pow(a, 0.94e2) * pow(x, 0.94e2) / 0.202841758047975043641540670708715278407213829324800000000e57 - pow(a, 0.90e2) * pow(x, 0.90e2) / 0.478680355604162443225142703063856402818662400000000e51 + 0.2756205443e10 / 0.5648339791689154560000e22 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.7075145e7 / 0.8e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.1929585e7 / 0.2e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.2756205443e10 / 0.6896629782282240000e19 * pow(a, 0.48e2) * pow(x, 0.48e2) - 0.47e2 / 0.157668101318894085383775593894550857318400000000e48 * pow(a, 0.86e2) * pow(x, 0.86e2) + 0.4502365e7 / 0.6e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.391510e6 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.3065857e7 / 0.54614971576704396636979200000e29 * pow(a, 0.64e2) * pow(x, 0.64e2) + 0.95041567e8 / 0.253170645208517836800000e24 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.124950e6 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.2185956041e10 / 0.2323244851200e13 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.20825e5 * a * a * x * x - 0.3065857e7 / 0.3710605421829034006806528000000e31 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.2756205443e10 / 0.13493406095769600e17 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.70514711e8 / 0.5822668800e10 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.3065857e7 / 0.903556515055771267891200000e27 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.47e2 / 0.570375560326748629295312225975119380480000000e45 * pow(a, 0.84e2) * pow(x, 0.84e2) - 0.2756205443e10 / 0.186209004121620480000e21 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.70514711e8 / 0.517570560e9 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.615574369e9 / 0.228096e6 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.3065857e7 / 0.16781597053821753753600000e26 * pow(a, 0.60e2) * pow(x, 0.60e2) + 0.22776251653e11 / 0.17079828480e11 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.47e2 / 0.2469158269812764628984035610281902080000000e43 * pow(a, 0.82e2) * pow(x, 0.82e2) - 0.226790557e9 / 0.19008e5 * pow(a, 0.22e2) * pow(x, 0.22e2) - 0.1339779509e10 / 0.118609920e9 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.226790557e9 / 0.5184e4 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.3065857e7 / 0.349616605287953203200000e24 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.2021e4 / 0.542010351910119064898934646159441920000000e42 * pow(a, 0.80e2) * pow(x, 0.80e2) + 0.22776251653e11 / 0.276756480e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.226790557e9 / 0.1728e4 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.60846247e8 / 0.192e3 * pow(a, 0.16e2) * pow(x, 0.16e2) - pow(a, 0.98e2) * pow(x, 0.98e2) / 0.608281864034267560872252163321295376887552831379210240000000000e63);
return retval;
}

double PHO_50_1( const double a, const double x )
{
double retval = 0.1066526065e-2 * pow(a, 0.3e1) * sqrt(0.663e3) * exp(-a * a * x * x / 0.2e1) * x * x * (0.1326e4 + 0.82861e5 / 0.17424717629722849154886008832000000e35 * pow(a, 0.72e2) * pow(x, 0.72e2) - 0.2756205443e10 / 0.149205932789760000e18 * pow(a, 0.46e2) * pow(x, 0.46e2) - 0.82861e5 / 0.1795990538549290809321465053184000000e37 * pow(a, 0.74e2) * pow(x, 0.74e2) - 0.82861e5 / 0.191060500325908433715855360000000e33 * pow(a, 0.70e2) * pow(x, 0.70e2) - 0.615574369e9 / 0.855360e6 * pow(a, 0.26e2) * pow(x, 0.26e2) - 0.95041567e8 / 0.13760757964800e14 * pow(a, 0.42e2) * pow(x, 0.42e2) + 0.82861e5 / 0.209992739891917079243740529295360000000e39 * pow(a, 0.76e2) * pow(x, 0.76e2) + pow(a, 0.96e2) * pow(x, 0.96e2) / 0.9361927294521925091148030955786859003409869045760000000000e58 - 0.95041567e8 / 0.2932791814915522560000e22 * pow(a, 0.54e2) * pow(x, 0.54e2) + 0.2185956041e10 / 0.19658225664000e14 * pow(a, 0.40e2) * pow(x, 0.40e2) - 0.2021e4 / 0.682476404648730507542156720209920000000e39 * pow(a, 0.78e2) * pow(x, 0.78e2) + 0.47e2 / 0.6136927635950800554168496193126364138700800000000e49 * pow(a, 0.88e2) * pow(x, 0.88e2) - 0.13139555e8 / 0.18e2 * pow(a, 0.14e2) * pow(x, 0.14e2) + 0.3065857e7 / 0.87341943006129569698676736000000e32 * pow(a, 0.68e2) * pow(x, 0.68e2) + pow(a, 0.92e2) * pow(x, 0.92e2) / 0.20325504330269051435406059391634518027377049600000000e53 - pow(a, 0.94e2) * pow(x, 0.94e2) / 0.11702409118152406363935038694733573754262336307200000000e56 - pow(a, 0.90e2) * pow(x, 0.90e2) / 0.46026957269631004156263721448447731040256000000000e50 + 0.2756205443e10 / 0.2606926057702686720000e22 * pow(a, 0.52e2) * pow(x, 0.52e2) + 0.8361535e7 / 0.8e1 * pow(a, 0.12e2) * pow(x, 0.12e2) - 0.3344614e7 / 0.3e1 * pow(a, 0.10e2) * pow(x, 0.10e2) + 0.2756205443e10 / 0.3448314891141120000e19 * pow(a, 0.48e2) * pow(x, 0.48e2) - 0.47e2 / 0.21224552100620357647815945331958769254400000000e47 * pow(a, 0.86e2) * pow(x, 0.86e2) + 0.2544815e7 / 0.3e1 * pow(a, 0.8e1) * pow(x, 0.8e1) - 0.433160e6 * pow(a, 0.6e1) * pow(x, 0.6e1) + 0.3065857e7 / 0.18905182468859214220492800000e29 * pow(a, 0.64e2) * pow(x, 0.64e2) + 0.95041567e8 / 0.107110657588219084800000e24 * pow(a, 0.56e2) * pow(x, 0.56e2) + 0.270725e6 / 0.2e1 * pow(a, 0.4e1) * pow(x, 0.4e1) - 0.70514711e8 / 0.44677785600e11 * pow(a, 0.38e2) * pow(x, 0.38e2) - 0.22100e5 * a * a * x * x - 0.3065857e7 / 0.1213082541751799579148288000000e31 * pow(a, 0.66e2) * pow(x, 0.66e2) + 0.2756205443e10 / 0.7265680205414400e16 * pow(a, 0.44e2) * pow(x, 0.44e2) + 0.70514711e8 / 0.3583180800e10 * pow(a, 0.36e2) * pow(x, 0.36e2) - 0.3065857e7 / 0.330145649731916424806400000e27 * pow(a, 0.62e2) * pow(x, 0.62e2) + 0.47e2 / 0.87750086204115173737740342457710673920000000e44 * pow(a, 0.84e2) * pow(x, 0.84e2) - 0.2756205443e10 / 0.89523559673856000000e20 * pow(a, 0.50e2) * pow(x, 0.50e2) - 0.70514711e8 / 0.328458240e9 * pow(a, 0.34e2) * pow(x, 0.34e2) + 0.421182463e9 / 0.114048e6 * pow(a, 0.24e2) * pow(x, 0.24e2) + 0.3065857e7 / 0.6454460405316059136000000e25 * pow(a, 0.60e2) * pow(x, 0.60e2) + 0.1339779509e10 / 0.656916480e9 * pow(a, 0.32e2) * pow(x, 0.32e2) - 0.47e2 / 0.427354315929132339631852317164175360000000e42 * pow(a, 0.82e2) * pow(x, 0.82e2) - 0.226790557e9 / 0.14256e5 * pow(a, 0.22e2) * pow(x, 0.22e2) + pow(a, 0.100e3) * pow(x, 0.100e3) / 0.30414093201713378043612608166064768844377641568960512000000000000e65 - 0.1339779509e10 / 0.79833600e8 * pow(a, 0.30e2) * pow(x, 0.30e2) + 0.2948277241e10 / 0.51840e5 * pow(a, 0.20e2) * pow(x, 0.20e2) - 0.3065857e7 / 0.141191321366288793600000e24 * pow(a, 0.58e2) * pow(x, 0.58e2) + 0.2021e4 / 0.104232759982715204788256662722969600000000e42 * pow(a, 0.80e2) * pow(x, 0.80e2) + 0.22776251653e11 / 0.191600640e9 * pow(a, 0.28e2) * pow(x, 0.28e2) - 0.71909201e8 / 0.432e3 * pow(a, 0.18e2) * pow(x, 0.18e2) + 0.113000173e9 / 0.288e3 * pow(a, 0.16e2) * pow(x, 0.16e2) - pow(a, 0.98e2) * pow(x, 0.98e2) / 0.11697728154505145401389464679255680324760631372677120000000000e62);
return retval;
}

TEF EF_PHO[] = {&PHO_0_0, &PHO_1_0, &PHO_2_0, &PHO_3_0, &PHO_4_0, &PHO_5_0, &PHO_6_0, &PHO_7_0, &PHO_8_0, &PHO_9_0, &PHO_10_0, &PHO_11_0, &PHO_12_0, &PHO_13_0, &PHO_14_0, &PHO_15_0, &PHO_16_0, &PHO_17_0, &PHO_18_0, &PHO_19_0, &PHO_20_0, &PHO_21_0, &PHO_22_0, &PHO_23_0, &PHO_24_0, &PHO_25_0, &PHO_26_0, &PHO_27_0, &PHO_28_0, &PHO_29_0, &PHO_30_0, &PHO_31_0, &PHO_32_0, &PHO_33_0, &PHO_34_0, &PHO_35_0, &PHO_36_0, &PHO_37_0, &PHO_38_0, &PHO_39_0, &PHO_40_0, &PHO_41_0, &PHO_42_0, &PHO_43_0, &PHO_44_0, &PHO_45_0, &PHO_46_0, &PHO_47_0, &PHO_48_0, &PHO_49_0, &PHO_50_0, &PHO_0_1, &PHO_1_1, &PHO_2_1, &PHO_3_1, &PHO_4_1, &PHO_5_1, &PHO_6_1, &PHO_7_1, &PHO_8_1, &PHO_9_1, &PHO_10_1, &PHO_11_1, &PHO_12_1, &PHO_13_1, &PHO_14_1, &PHO_15_1, &PHO_16_1, &PHO_17_1, &PHO_18_1, &PHO_19_1, &PHO_20_1, &PHO_21_1, &PHO_22_1, &PHO_23_1, &PHO_24_1, &PHO_25_1, &PHO_26_1, &PHO_27_1, &PHO_28_1, &PHO_29_1, &PHO_30_1, &PHO_31_1, &PHO_32_1, &PHO_33_1, &PHO_34_1, &PHO_35_1, &PHO_36_1, &PHO_37_1, &PHO_38_1, &PHO_39_1, &PHO_40_1, &PHO_41_1, &PHO_42_1, &PHO_43_1, &PHO_44_1, &PHO_45_1, &PHO_46_1, &PHO_47_1, &PHO_48_1, &PHO_49_1, &PHO_50_1, &PHO_50_1};
#endif
